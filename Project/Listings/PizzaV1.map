Component: ARM Compiler 5.06 update 4 (build 422) Tool: armlink [4d35d2]

==============================================================================

Section Cross References

    system_stm32f10x.o(i.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data) for SystemCoreClock
    system_stm32f10x.o(i.SystemInit) refers to system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6711SetSysClockEv) for [local to system_stm32f10x_c]::SetSysClock()
    system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6711SetSysClockEv) refers to system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6715SetSysClockTo72Ev) for [local to system_stm32f10x_c]::SetSysClockTo72()
    system_stm32f10x.o(.ARM.exidx) refers to system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6715SetSysClockTo72Ev) for i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6715SetSysClockTo72Ev
    system_stm32f10x.o(.ARM.exidx) refers to system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6711SetSysClockEv) for i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6711SetSysClockEv
    system_stm32f10x.o(.ARM.exidx) refers to system_stm32f10x.o(i.SystemInit) for i.SystemInit
    system_stm32f10x.o(.ARM.exidx) refers to system_stm32f10x.o(i.SystemCoreClockUpdate) for i.SystemCoreClockUpdate
    startup_stm32f10x_hd.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(STACK) for __initial_sp
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(.text) for Reset_Handler
    startup_stm32f10x_hd.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_stm32f10x_hd.o(RESET) refers to mdbuart.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to pcuart.o(i.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to scanqrcodeuart.o(i.USART3_IRQHandler) for USART3_IRQHandler
    startup_stm32f10x_hd.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(.text) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    startup_stm32f10x_hd.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(HEAP) for Heap_Mem
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(STACK) for Stack_Mem
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to cxa_guard_acquire.o(i.__cxa_guard_acquire) for __cxa_guard_acquire
    main.o(i.main) refers to mainthread.o(i._ZN10MainThreadC1Ev) for MainThread::MainThread()
    main.o(i.main) refers to thread.o(i._ZN6Thread5startEv) for Thread::start()
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(.data__ZZN10MainThread11getInstanceEvE4task) for guard variable for MainThread::getInstance()::task
    main.o(i.main) refers to main.o(.bss__ZZN10MainThread11getInstanceEvE4task) for MainThread::getInstance()::task
    main.o(.ARM.exidx) refers to main.o(i.main) for i.main
    appconfig.o(.ARM.exidx) refers to appconfig.o(i._ZN9AppConfigC1Ev) for i._ZN9AppConfigC1Ev
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c110ReadBufferEj) refers to flash.o(.bss) for FlashPageBuffer
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c111WriteBufferEj) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c113WriteHalfWordEjt) for [local to Flash_cpp]::WriteHalfWord(unsigned, unsigned short)
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c111WriteBufferEj) refers to flash.o(.bss) for FlashPageBuffer
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c113WriteHalfWordEjt) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c18WaitDoneEt) for [local to Flash_cpp]::WaitDone(unsigned short)
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c14CopyEtPKvt) refers to flash.o(.bss) for FlashPageBuffer
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c18WaitDoneEt) refers to rtx_delay.o(.text.osDelay) for osDelay
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19EarsePageEj) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c18WaitDoneEt) for [local to Flash_cpp]::WaitDone(unsigned short)
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19WritePageEjPKtt) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c110ReadBufferEj) for [local to Flash_cpp]::ReadBuffer(unsigned)
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19WritePageEjPKtt) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c14CopyEtPKvt) for [local to Flash_cpp]::Copy(unsigned short, const void*, unsigned short)
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19WritePageEjPKtt) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19EarsePageEj) for [local to Flash_cpp]::EarsePage(unsigned)
    flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19WritePageEjPKtt) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c111WriteBufferEj) for [local to Flash_cpp]::WriteBuffer(unsigned)
    flash.o(i._ZN5Flash5writeEjPKvj) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19WritePageEjPKtt) for [local to Flash_cpp]::WritePage(unsigned, const unsigned short*, unsigned short)
    flash.o(.ARM.exidx) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c18WaitDoneEt) for i._ZN30_INTERNAL_9_Flash_cpp_170e27c18WaitDoneEt
    flash.o(.ARM.exidx) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c113WriteHalfWordEjt) for i._ZN30_INTERNAL_9_Flash_cpp_170e27c113WriteHalfWordEjt
    flash.o(.ARM.exidx) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c111WriteBufferEj) for i._ZN30_INTERNAL_9_Flash_cpp_170e27c111WriteBufferEj
    flash.o(.ARM.exidx) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c110ReadBufferEj) for i._ZN30_INTERNAL_9_Flash_cpp_170e27c110ReadBufferEj
    flash.o(.ARM.exidx) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c14CopyEtPKvt) for i._ZN30_INTERNAL_9_Flash_cpp_170e27c14CopyEtPKvt
    flash.o(.ARM.exidx) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19EarsePageEj) for i._ZN30_INTERNAL_9_Flash_cpp_170e27c19EarsePageEj
    flash.o(.ARM.exidx) refers to flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19WritePageEjPKtt) for i._ZN30_INTERNAL_9_Flash_cpp_170e27c19WritePageEjPKtt
    flash.o(.ARM.exidx) refers to flash.o(i._ZN5Flash5writeEjPKvj) for i._ZN5Flash5writeEjPKvj
    flash.o(.ARM.exidx) refers to flash.o(i._ZN5Flash4readEjPvj) for i._ZN5Flash4readEjPvj
    pcuart.o(i.USART2_IRQHandler) refers to pcuart.o(i._ZN6PCUart11getInstanceEv) for PCUart::getInstance()
    pcuart.o(i.USART2_IRQHandler) refers to pcuart.o(i._ZN6PCUart17onMessageReceiverEPhj) for PCUart::onMessageReceiver(unsigned char*, unsigned)
    pcuart.o(i.USART2_IRQHandler) refers to pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj) for [local to PCUart_cpp]::BufferOver(unsigned, unsigned)
    pcuart.o(i.USART2_IRQHandler) refers to pcuart.o(.data) for USART2_IRQHandler::lastIndex
    pcuart.o(i.USART2_IRQHandler) refers to pcuart.o(.bss) for PCReceiverBuffer
    pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj) refers to pcuart.o(i._ZN6PCUart11getInstanceEv) for PCUart::getInstance()
    pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj) refers to pcuart.o(i._ZN6PCUart17onMessageReceiverEPhj) for PCUart::onMessageReceiver(unsigned char*, unsigned)
    pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj) refers to pcuart.o(.bss) for PCReceiverBufferOnce
    pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10InitDriverEv) refers to pcuart.o(.bss) for PCReceiverBuffer
    pcuart.o(i._ZN6PCUart17onMessageReceiverEPhj) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    pcuart.o(i._ZN6PCUart5writeEPKhj) refers to pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb9WriteByteEh) for [local to PCUart_cpp]::WriteByte(unsigned char)
    pcuart.o(i._ZN6PCUartC1Ev) refers to messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj) for MessageQueue::MessageQueue(const char*, unsigned long long*, unsigned, unsigned)
    pcuart.o(i._ZN6PCUartC1Ev) refers to pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10InitDriverEv) for [local to PCUart_cpp]::InitDriver()
    pcuart.o(i._ZN6PCUartC1Ev) refers to pcuart.o(.constdata__ZTV10BaseFormat) for vtable for BaseFormat
    pcuart.o(i._ZN6PCUartC1Ev) refers to pcuart.o(.constdata__ZTV10BaseOutput) for vtable for BaseOutput
    pcuart.o(i._ZN6PCUartC1Ev) refers to pcuart.o(.constdata__ZTV6PCUart) for vtable for PCUart
    pcuart.o(i._ZThn12_N6PCUart5writeEPKhj) refers to pcuart.o(i._ZN6PCUart5writeEPKhj) for PCUart::write(const unsigned char*, unsigned)
    pcuart.o(.ARM.exidx) refers to pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10InitDriverEv) for i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10InitDriverEv
    pcuart.o(.ARM.exidx) refers to pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb9WriteByteEh) for i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb9WriteByteEh
    pcuart.o(.ARM.exidx) refers to pcuart.o(i._ZN6PCUartC1Ev) for i._ZN6PCUartC1Ev
    pcuart.o(.ARM.exidx) refers to pcuart.o(i._ZN6PCUart17onMessageReceiverEPhj) for i._ZN6PCUart17onMessageReceiverEPhj
    pcuart.o(.ARM.exidx) refers to pcuart.o(i.USART2_IRQHandler) for i.USART2_IRQHandler
    pcuart.o(.ARM.exidx) refers to pcuart.o(i._ZN6PCUart5writeEPKhj) for i._ZN6PCUart5writeEPKhj
    pcuart.o(.ARM.exidx) refers to pcuart.o(i._ZThn12_N6PCUart5writeEPKhj) for i._ZThn12_N6PCUart5writeEPKhj
    pcuart.o(.ARM.exidx) refers to pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj) for i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj
    mdbuart.o(i.USART1_IRQHandler) refers to mdbuart.o(i._ZN7MDBUart11getInstanceEv) for MDBUart::getInstance()
    mdbuart.o(i.USART1_IRQHandler) refers to mdbuart.o(i._ZN7MDBUart17onMessageReceiverEPvj) for MDBUart::onMessageReceiver(void*, unsigned)
    mdbuart.o(i.USART1_IRQHandler) refers to mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj) for [local to MDBUart_cpp]::BufferOver(unsigned, unsigned)
    mdbuart.o(i.USART1_IRQHandler) refers to mdbuart.o(.data) for USART1_IRQHandler::lastIndex
    mdbuart.o(i.USART1_IRQHandler) refers to mdbuart.o(.bss) for MDBReceiverBuffer
    mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj) refers to mdbuart.o(i._ZN7MDBUart11getInstanceEv) for MDBUart::getInstance()
    mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj) refers to mdbuart.o(i._ZN7MDBUart17onMessageReceiverEPvj) for MDBUart::onMessageReceiver(void*, unsigned)
    mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj) refers to mdbuart.o(.bss) for MDBReceiverBufferOnce
    mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610InitDriverEv) refers to mdbuart.o(.bss) for MDBReceiverBuffer
    mdbuart.o(i._ZN7MDBUart17onMessageReceiverEPvj) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    mdbuart.o(i._ZN7MDBUart5writeEPKhj) refers to mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e8669WriteByteEh) for [local to MDBUart_cpp]::WriteByte(unsigned char)
    mdbuart.o(i._ZN7MDBUartC1Ev) refers to messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj) for MessageQueue::MessageQueue(const char*, unsigned long long*, unsigned, unsigned)
    mdbuart.o(i._ZN7MDBUartC1Ev) refers to mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610InitDriverEv) for [local to MDBUart_cpp]::InitDriver()
    mdbuart.o(i._ZN7MDBUartC1Ev) refers to pcuart.o(.constdata__ZTV10BaseOutput) for vtable for BaseOutput
    mdbuart.o(i._ZN7MDBUartC1Ev) refers to pcuart.o(.constdata__ZTV10BaseFormat) for vtable for BaseFormat
    mdbuart.o(i._ZN7MDBUartC1Ev) refers to mdbuart.o(.constdata__ZTV7MDBUart) for vtable for MDBUart
    mdbuart.o(i._ZThn16_N7MDBUart5writeEPKhj) refers to mdbuart.o(i._ZN7MDBUart5writeEPKhj) for MDBUart::write(const unsigned char*, unsigned)
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e8669WriteByteEh) for i._ZN33_INTERNAL_11_MDBUart_cpp_4712e8669WriteByteEh
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610InitDriverEv) for i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610InitDriverEv
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i._ZN7MDBUartC1Ev) for i._ZN7MDBUartC1Ev
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i._ZN7MDBUart17onMessageReceiverEPvj) for i._ZN7MDBUart17onMessageReceiverEPvj
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i.USART1_IRQHandler) for i.USART1_IRQHandler
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i._ZN7MDBUart5writeEPKhj) for i._ZN7MDBUart5writeEPKhj
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i._ZThn16_N7MDBUart5writeEPKhj) for i._ZThn16_N7MDBUart5writeEPKhj
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj) for i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj
    scanqrcodeuart.o(i.USART3_IRQHandler) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv) for ScanQRCodeUart::getInstance()
    scanqrcodeuart.o(i.USART3_IRQHandler) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart17onMessageReceiverEPvj) for ScanQRCodeUart::onMessageReceiver(void*, unsigned)
    scanqrcodeuart.o(i.USART3_IRQHandler) refers to scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj) for [local to ScanQRCodeUart_cpp]::BufferOver(unsigned, unsigned)
    scanqrcodeuart.o(i.USART3_IRQHandler) refers to scanqrcodeuart.o(.data) for USART3_IRQHandler::lastIndex
    scanqrcodeuart.o(i.USART3_IRQHandler) refers to scanqrcodeuart.o(.bss) for ScanQRCodeReceiver
    scanqrcodeuart.o(i._ZN14ScanQRCodeUart17onMessageReceiverEPvj) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    scanqrcodeuart.o(i._ZN14ScanQRCodeUart5writeEPKhj) refers to scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b69WriteByteEh) for [local to ScanQRCodeUart_cpp]::WriteByte(unsigned char)
    scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev) refers to messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj) for MessageQueue::MessageQueue(const char*, unsigned long long*, unsigned, unsigned)
    scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev) refers to scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610InitDriverEv) for [local to ScanQRCodeUart_cpp]::InitDriver()
    scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev) refers to pcuart.o(.constdata__ZTV10BaseOutput) for vtable for BaseOutput
    scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev) refers to pcuart.o(.constdata__ZTV10BaseFormat) for vtable for BaseFormat
    scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev) refers to scanqrcodeuart.o(.constdata__ZTV14ScanQRCodeUart) for vtable for ScanQRCodeUart
    scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv) for ScanQRCodeUart::getInstance()
    scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart17onMessageReceiverEPvj) for ScanQRCodeUart::onMessageReceiver(void*, unsigned)
    scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj) refers to scanqrcodeuart.o(.bss) for ScanQRCodeMessageOnce
    scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610InitDriverEv) refers to scanqrcodeuart.o(.bss) for ScanQRCodeReceiver
    scanqrcodeuart.o(i._ZThn16_N14ScanQRCodeUart5writeEPKhj) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart5writeEPKhj) for ScanQRCodeUart::write(const unsigned char*, unsigned)
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b69WriteByteEh) for i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b69WriteByteEh
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610InitDriverEv) for i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610InitDriverEv
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev) for i._ZN14ScanQRCodeUartC1Ev
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart17onMessageReceiverEPvj) for i._ZN14ScanQRCodeUart17onMessageReceiverEPvj
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i.USART3_IRQHandler) for i.USART3_IRQHandler
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart5writeEPKhj) for i._ZN14ScanQRCodeUart5writeEPKhj
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i._ZThn16_N14ScanQRCodeUart5writeEPKhj) for i._ZThn16_N14ScanQRCodeUart5writeEPKhj
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj) for i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj
    positionswitch.o(.ARM.exidx) refers to positionswitch.o(i._ZN14PositionSwitch5vInitEv) for i._ZN14PositionSwitch5vInitEv
    positionswitch.o(.ARM.exidx) refers to positionswitch.o(i._ZN14PositionSwitch9xGetValueEv) for i._ZN14PositionSwitch9xGetValueEv
    motor.o(i._ZN5Motor5vInitEv) refers to motor.o(i._ZN5Motor7vSetDirENS_3DirE) for Motor::vSetDir(Motor::Dir)
    motor.o(.ARM.exidx) refers to motor.o(i._ZN5Motor7vSetDirENS_3DirE) for i._ZN5Motor7vSetDirENS_3DirE
    motor.o(.ARM.exidx) refers to motor.o(i._ZN5Motor5vInitEv) for i._ZN5Motor5vInitEv
    elevatormotor.o(i._ZN13ElevatorMotor5vInitEv) refers to elevatormotor.o(i._ZN13ElevatorMotor10vSetEnableEb) for ElevatorMotor::vSetEnable(bool)
    elevatormotor.o(i._ZN13ElevatorMotor9xToTargetEj) refers to elevatormotor.o(i._ZN13ElevatorMotor7vSetDirENS_3DirE) for ElevatorMotor::vSetDir(ElevatorMotor::Dir)
    elevatormotor.o(i._ZN13ElevatorMotor9xToTargetEj) refers to rtx_delay.o(.text.osDelay) for osDelay
    elevatormotor.o(i._ZN13ElevatorMotor9xToTargetEj) refers to elevatormotor.o(i._ZN13ElevatorMotor7isFaultEv) for ElevatorMotor::isFault()
    elevatormotor.o(i._ZN13ElevatorMotor9xToTargetEj) refers to elevatormotor.o(.data) for ElevatorMotor::CurrentSteps
    elevatormotor.o(.ARM.exidx) refers to elevatormotor.o(i._ZN13ElevatorMotor10vSetEnableEb) for i._ZN13ElevatorMotor10vSetEnableEb
    elevatormotor.o(.ARM.exidx) refers to elevatormotor.o(i._ZN13ElevatorMotor5vInitEv) for i._ZN13ElevatorMotor5vInitEv
    elevatormotor.o(.ARM.exidx) refers to elevatormotor.o(i._ZN13ElevatorMotor7vSetDirENS_3DirE) for i._ZN13ElevatorMotor7vSetDirENS_3DirE
    elevatormotor.o(.ARM.exidx) refers to elevatormotor.o(i._ZN13ElevatorMotor9xToTargetEj) for i._ZN13ElevatorMotor9xToTargetEj
    rotationmotor.o(i._ZN13RotationMotor9xToTargetEj) refers to rotationmotor.o(i._ZN13RotationMotor7vSetDirENS_3DirE) for RotationMotor::vSetDir(RotationMotor::Dir)
    rotationmotor.o(i._ZN13RotationMotor9xToTargetEj) refers to rtx_delay.o(.text.osDelay) for osDelay
    rotationmotor.o(i._ZN13RotationMotor9xToTargetEj) refers to rotationmotor.o(i._ZN13RotationMotor7isFalutEv) for RotationMotor::isFalut()
    rotationmotor.o(i._ZN13RotationMotor9xToTargetEj) refers to rotationmotor.o(.data) for RotationMotor::CurrentSteps
    rotationmotor.o(.ARM.exidx) refers to rotationmotor.o(i._ZN13RotationMotor5vInitEv) for i._ZN13RotationMotor5vInitEv
    rotationmotor.o(.ARM.exidx) refers to rotationmotor.o(i._ZN13RotationMotor7vSetDirENS_3DirE) for i._ZN13RotationMotor7vSetDirENS_3DirE
    rotationmotor.o(.ARM.exidx) refers to rotationmotor.o(i._ZN13RotationMotor10vSetEnableEb) for i._ZN13RotationMotor10vSetEnableEb
    rotationmotor.o(.ARM.exidx) refers to rotationmotor.o(i._ZN13RotationMotor9xToTargetEj) for i._ZN13RotationMotor9xToTargetEj
    currentsense.o(i._ZN12CurrentSense11vStartCheckEv) refers to currentsense.o(.data) for CurrentSense::CurrentValue
    currentsense.o(.ARM.exidx) refers to currentsense.o(i._ZN12CurrentSense11vStartCheckEv) for i._ZN12CurrentSense11vStartCheckEv
    ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd7ReadBitEv) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd12vTimer6DelayEj) for [local to DS18B20_cpp]::vTimer6Delay(unsigned)
    ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd8ReadByteEv) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd7ReadBitEv) for [local to DS18B20_cpp]::ReadBit()
    ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9IsCheckedEv) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd12vTimer6DelayEj) for [local to DS18B20_cpp]::vTimer6Delay(unsigned)
    ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9WriteByteEh) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd12vTimer6DelayEj) for [local to DS18B20_cpp]::vTimer6Delay(unsigned)
    ds18b20.o(i._ZN7DS18B205vInitEv) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd11vTimer6InitEv) for [local to DS18B20_cpp]::vTimer6Init()
    ds18b20.o(i._ZN7DS18B209xGetValueEPj) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9IsCheckedEv) for [local to DS18B20_cpp]::IsChecked()
    ds18b20.o(i._ZN7DS18B209xGetValueEPj) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9WriteByteEh) for [local to DS18B20_cpp]::WriteByte(unsigned char)
    ds18b20.o(i._ZN7DS18B209xGetValueEPj) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd8ReadByteEv) for [local to DS18B20_cpp]::ReadByte()
    ds18b20.o(.ARM.exidx) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd11vTimer6InitEv) for i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd11vTimer6InitEv
    ds18b20.o(.ARM.exidx) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd12vTimer6DelayEj) for i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd12vTimer6DelayEj
    ds18b20.o(.ARM.exidx) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9IsCheckedEv) for i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9IsCheckedEv
    ds18b20.o(.ARM.exidx) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd7ReadBitEv) for i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd7ReadBitEv
    ds18b20.o(.ARM.exidx) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9WriteByteEh) for i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9WriteByteEh
    ds18b20.o(.ARM.exidx) refers to ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd8ReadByteEv) for i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd8ReadByteEv
    ds18b20.o(.ARM.exidx) refers to ds18b20.o(i._ZN7DS18B205vInitEv) for i._ZN7DS18B205vInitEv
    ds18b20.o(.ARM.exidx) refers to ds18b20.o(i._ZN7DS18B209xGetValueEPj) for i._ZN7DS18B209xGetValueEPj
    mainthread.o(i._ZN10MainThread3runEv) refers to cxa_guard_acquire.o(i.__cxa_guard_acquire) for __cxa_guard_acquire
    mainthread.o(i._ZN10MainThread3runEv) refers to pcuart.o(i._ZN6PCUartC1Ev) for PCUart::PCUart()
    mainthread.o(i._ZN10MainThread3runEv) refers to mdbuart.o(i._ZN7MDBUartC1Ev) for MDBUart::MDBUart()
    mainthread.o(i._ZN10MainThread3runEv) refers to mainthread.o(i._ZN10BaseOutputC2ERKS_) for BaseOutput::BaseOutput__sub_object(const BaseOutput&)
    mainthread.o(i._ZN10MainThread3runEv) refers to mainthread.o(i._ZN10BaseFormatC2ERKS_) for BaseFormat::BaseFormat__sub_object(const BaseFormat&)
    mainthread.o(i._ZN10MainThread3runEv) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    mainthread.o(i._ZN10MainThread3runEv) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    mainthread.o(i._ZN10MainThread3runEv) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev) for ScanQRCodeUart::ScanQRCodeUart()
    mainthread.o(i._ZN10MainThread3runEv) refers to mainthread.o(i._ZN11BaseMessageC1EPvj) for BaseMessage::BaseMessage(void*, unsigned)
    mainthread.o(i._ZN10MainThread3runEv) refers to mainthread.o(i._ZN12MessageQueue4recvEPvj) for MessageQueue::recv(void*, unsigned)
    mainthread.o(i._ZN10MainThread3runEv) refers to mdbuart.o(i._ZN7MDBUart5writeEPKhj) for MDBUart::write(const unsigned char*, unsigned)
    mainthread.o(i._ZN10MainThread3runEv) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart5writeEPKhj) for ScanQRCodeUart::write(const unsigned char*, unsigned)
    mainthread.o(i._ZN10MainThread3runEv) refers to pcuart.o(.data__ZZN6PCUart11getInstanceEvE4uart) for guard variable for PCUart::getInstance()::uart
    mainthread.o(i._ZN10MainThread3runEv) refers to pcuart.o(.bss__ZZN6PCUart11getInstanceEvE4uart) for PCUart::getInstance()::uart
    mainthread.o(i._ZN10MainThread3runEv) refers to mdbuart.o(.data__ZZN7MDBUart11getInstanceEvE4uart) for guard variable for MDBUart::getInstance()::uart
    mainthread.o(i._ZN10MainThread3runEv) refers to mdbuart.o(.bss__ZZN7MDBUart11getInstanceEvE4uart) for MDBUart::getInstance()::uart
    mainthread.o(i._ZN10MainThread3runEv) refers to mdbuart.o(.constdata__ZTV7MDBUart) for vtable for MDBUart
    mainthread.o(i._ZN10MainThread3runEv) refers to scanqrcodeuart.o(.data__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE) for guard variable for ScanQRCodeUart::getInstance()::INSTANCE
    mainthread.o(i._ZN10MainThread3runEv) refers to scanqrcodeuart.o(.bss__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE) for ScanQRCodeUart::getInstance()::INSTANCE
    mainthread.o(i._ZN10MainThread3runEv) refers to scanqrcodeuart.o(.constdata__ZTV14ScanQRCodeUart) for vtable for ScanQRCodeUart
    mainthread.o(i._ZN10MainThreadC1Ev) refers to thread.o(i._ZN6ThreadC2EPKcPyj12osPriority_t) for Thread::Thread__sub_object(const char*, unsigned long long*, unsigned, osPriority_t)
    mainthread.o(i._ZN10MainThreadC1Ev) refers to messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj) for MessageQueue::MessageQueue(const char*, unsigned long long*, unsigned, unsigned)
    mainthread.o(i._ZN10MainThreadC1Ev) refers to mainthread.o(.constdata__ZTV10MainThread) for vtable for MainThread
    mainthread.o(.ARM.exidx) refers to mainthread.o(i._ZN10MainThread3runEv) for i._ZN10MainThread3runEv
    mainthread.o(.ARM.exidx) refers to mainthread.o(i._ZN10MainThreadC1Ev) for i._ZN10MainThreadC1Ev
    messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    messagequeue.o(.ARM.exidx) refers to messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj) for i._ZN12MessageQueueC1EPKcPyjj
    mutex.o(i._ZN5MutexC1EPKc) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    mutex.o(.ARM.exidx) refers to mutex.o(i._ZN5MutexC1EPKc) for i._ZN5MutexC1EPKc
    thread.o(i._ZN6Thread20ThreadStartFuncationEPv) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    thread.o(i._ZN6Thread5startEv) refers to thread.o(i._ZN6Thread9terminateEv) for Thread::terminate()
    thread.o(i._ZN6Thread5startEv) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    thread.o(i._ZN6Thread5startEv) refers to thread.o(i._ZN6Thread20ThreadStartFuncationEPv) for Thread::ThreadStartFuncation(void*)
    thread.o(i._ZN6Thread9terminateEv) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    thread.o(i._ZN6ThreadC2EPKcPyj12osPriority_t) refers to thread.o(.constdata__ZTV6Thread) for vtable for Thread
    thread.o(.ARM.exidx) refers to thread.o(i._ZN6ThreadC2EPKcPyj12osPriority_t) for i._ZN6ThreadC2EPKcPyj12osPriority_t
    thread.o(.ARM.exidx) refers to thread.o(i._ZN6Thread20ThreadStartFuncationEPv) for i._ZN6Thread20ThreadStartFuncationEPv
    thread.o(.ARM.exidx) refers to thread.o(i._ZN6Thread9terminateEv) for i._ZN6Thread9terminateEv
    thread.o(.ARM.exidx) refers to thread.o(i._ZN6Thread5startEv) for i._ZN6Thread5startEv
    basemessage.o(.ARM.exidx) refers to basemessage.o(i._ZN11BaseMessage9isCheckedEv) for i._ZN11BaseMessage9isCheckedEv
    baseformat.o(i._ZN10BaseFormat11formatWriteEPKcz) refers to string.o(i._ZN5myLib14xStringValueOfEPcihb) for myLib::xStringValueOf(char*, int, unsigned char, bool)
    baseformat.o(i._ZN10BaseFormat11formatWriteEPKcz) refers to string.o(i._ZN5myLib14xStringValueOfEPcPKhj) for myLib::xStringValueOf(char*, const unsigned char*, unsigned)
    baseformat.o(i._ZN10BaseFormat11formatWriteEPKcz) refers to string.o(i._ZN5myLib11xStringCopyEPKcPc) for myLib::xStringCopy(const char*, char*)
    baseformat.o(.ARM.exidx) refers to baseformat.o(i._ZN10BaseFormat11formatWriteEPKcz) for i._ZN10BaseFormat11formatWriteEPKcz
    baseoutput.o(.ARM.exidx) refers to baseoutput.o(i._ZN10BaseOutput5buildEPh) for i._ZN10BaseOutput5buildEPh
    logger.o(i._ZN5myLib6Logger6formatEPKcz) refers to string.o(i._ZN5myLib14xStringValueOfEPcihb) for myLib::xStringValueOf(char*, int, unsigned char, bool)
    logger.o(i._ZN5myLib6Logger6formatEPKcz) refers to string.o(i._ZN5myLib11xStringCopyEPKcPc) for myLib::xStringCopy(const char*, char*)
    logger.o(i._ZN5myLib6LoggerC2EPh) refers to logger.o(.constdata__ZTVN5myLib6LoggerE) for vtable for myLib::Logger
    logger.o(i._ZN5myLib6LoggerlsEi) refers to string.o(i._ZN5myLib14xStringValueOfEPcihb) for myLib::xStringValueOf(char*, int, unsigned char, bool)
    logger.o(.ARM.exidx) refers to logger.o(i._ZN5myLib6LoggerC2EPh) for i._ZN5myLib6LoggerC2EPh
    logger.o(.ARM.exidx) refers to logger.o(i._ZN5myLib6LoggerlsEi) for i._ZN5myLib6LoggerlsEi
    logger.o(.ARM.exidx) refers to logger.o(i._ZN5myLib6Logger6formatEPKcz) for i._ZN5myLib6Logger6formatEPKcz
    string.o(i._ZN5myLib12xStringSplitEPKcS1_PPc) refers to string.o(i._ZN5myLib17xStringIndexOfAllEPKcS1_) for myLib::xStringIndexOfAll(const char*, const char*)
    string.o(i._ZN5myLib12xStringSplitEPKcS1_PPc) refers to string.o(i._ZN5myLib11xStringCopyEPKcPc) for myLib::xStringCopy(const char*, char*)
    string.o(i._ZN5myLib12xStringSplitEPKcS1_PPc) refers to string.o(i._ZN5myLib11xStringCopyEPKcjPc) for myLib::xStringCopy(const char*, unsigned, char*)
    string.o(i._ZN5myLib14xStringValueOfEPcPKhj) refers to string.o(i._ZN5myLib14xStringValueOfEPcihb) for myLib::xStringValueOf(char*, int, unsigned char, bool)
    string.o(i._ZN5myLib14xStringValueOfEPcihb) refers to string.o(.constdata) for [local to String_cpp]::myLib::HexListUpper
    string.o(.ARM.exidx) refers to string.o(i._ZNK5myLib11ConstString7indexOfEc) for i._ZNK5myLib11ConstString7indexOfEc
    string.o(.ARM.exidx) refers to string.o(i._ZNK5myLib11ConstString7indexOfEPKc) for i._ZNK5myLib11ConstString7indexOfEPKc
    string.o(.ARM.exidx) refers to string.o(i._ZNK5myLib11ConstStringeqERKS0_) for i._ZNK5myLib11ConstStringeqERKS0_
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib16xStringGetLengthEPKc) for i._ZN5myLib16xStringGetLengthEPKc
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib12xStringEqualEPKcS1_) for i._ZN5myLib12xStringEqualEPKcS1_
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib16xStringSubStringEPKcjjPc) for i._ZN5myLib16xStringSubStringEPKcjjPc
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib14xStringIndexOfEPKcc) for i._ZN5myLib14xStringIndexOfEPKcc
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib14xStringIndexOfEPKcS1_) for i._ZN5myLib14xStringIndexOfEPKcS1_
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib17xStringIndexOfAllEPKcS1_) for i._ZN5myLib17xStringIndexOfAllEPKcS1_
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib11xStringCopyEPKcPc) for i._ZN5myLib11xStringCopyEPKcPc
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib11xStringCopyEPKcjPc) for i._ZN5myLib11xStringCopyEPKcjPc
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib12xStringSplitEPKcS1_PPc) for i._ZN5myLib12xStringSplitEPKcS1_PPc
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib12xStringToIntEPKcPb) for i._ZN5myLib12xStringToIntEPKcPb
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib12xStringToHexEPKcPb) for i._ZN5myLib12xStringToHexEPKcPb
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib14xStringValueOfEPcihb) for i._ZN5myLib14xStringValueOfEPcihb
    string.o(.ARM.exidx) refers to string.o(i._ZN5myLib14xStringValueOfEPcPKhj) for i._ZN5myLib14xStringValueOfEPcPKhj
    rtx_lib.o(i._Z11_mutex_freePPv) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._Z14_mutex_acquirePPv) refers to rtx_lib.o(i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv) for [local to rtx_lib_c]::os_kernel_is_active()
    rtx_lib.o(i._Z14_mutex_acquirePPv) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._Z14_mutex_releasePPv) refers to rtx_lib.o(i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv) for [local to rtx_lib_c]::os_kernel_is_active()
    rtx_lib.o(i._Z14_mutex_releasePPv) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._Z17_mutex_initializePPv) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._Z17_mutex_initializePPv) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._Z25__user_perthread_libspacev) refers to rtx_lib.o(i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv) for [local to rtx_lib_c]::os_kernel_is_active()
    rtx_lib.o(i._Z25__user_perthread_libspacev) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i._Z25__user_perthread_libspacev) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._Z25__user_perthread_libspacev) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(i._Z29_platform_post_stackheap_initv) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv) refers to rtx_lib.o(.data) for [local to rtx_lib_c]::os_kernel_is_active()::os_kernel_active
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(i._Z29_platform_post_stackheap_initv) for i._Z29_platform_post_stackheap_initv
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(i._Z18osRtxKernelPreInitv) for i._Z18osRtxKernelPreInitv
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv) for i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(i._Z25__user_perthread_libspacev) for i._Z25__user_perthread_libspacev
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(i._Z17_mutex_initializePPv) for i._Z17_mutex_initializePPv
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(i._Z14_mutex_acquirePPv) for i._Z14_mutex_acquirePPv
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(i._Z14_mutex_releasePPv) for i._Z14_mutex_releasePPv
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(i._Z11_mutex_freePPv) for i._Z11_mutex_freePPv
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_config.o(.ARM.exidx) refers to rtx_config.o(i.osRtxIdleThread) for i.osRtxIdleThread
    rtx_config.o(.ARM.exidx) refers to rtx_config.o(i.osRtxErrorNotify) for i.osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f10x.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f10x.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    pure_virt.o(i.__cxa_pure_virtual) refers to defsig_pvfn_outer.o(.text) for __rt_SIGPVFN
    pure_virt.o(.ARM.exidx) refers to pure_virt.o(i.__cxa_pure_virtual) for i.__cxa_pure_virtual
    cxa_guard_acquire.o(.ARM.exidx) refers to cxa_guard_acquire.o(i.__cxa_guard_acquire) for i.__cxa_guard_acquire
    cxa_guard_release.o(.ARM.exidx) refers to cxa_guard_release.o(i.__cxa_guard_release) for i.__cxa_guard_release
    lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for __cxxabiv1::__array_type_info::~__array_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for __cxxabiv1::__function_type_info::~__function_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
    lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for i._ZN10__cxxabiv123__fundamental_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) for i._ZN10__cxxabiv123__fundamental_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for i._ZN10__cxxabiv117__array_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) for i._ZN10__cxxabiv117__array_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for i._ZN10__cxxabiv120__function_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) for i._ZN10__cxxabiv120__function_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for i._ZN10__cxxabiv116__enum_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) for i._ZN10__cxxabiv116__enum_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for i._ZN10__cxxabiv117__class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) for i._ZN10__cxxabiv117__class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for i._ZN10__cxxabiv120__si_class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) for i._ZN10__cxxabiv120__si_class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) for i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for i._ZN10__cxxabiv117__pbase_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) for i._ZN10__cxxabiv117__pbase_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for i._ZN10__cxxabiv119__pointer_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) for i._ZN10__cxxabiv119__pointer_type_infoD0Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) for i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    defsig_pvfn_outer.o(.text) refers to defsig_pvfn_inner.o(.text) for __rt_SIGPVFN_inner
    defsig_pvfn_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_pvfn_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    type_info_dtor.o(.ARM.exidx) refers to type_info_dtor.o(i._ZNSt9type_infoD1Ev) for i._ZNSt9type_infoD1Ev
    type_info_dtor.o(.ARM.exidx) refers to type_info_dtor.o(i._ZNSt9type_infoD0Ev) for i._ZNSt9type_infoD0Ev
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_globs.o(.text) for __cxa_get_globals
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_support.o(.text) for __ARM::is_foreign_exception(_Unwind_Control_Block*)
    arm_exceptions_callterm.o(.text) refers to arm_exceptions_terminate.o(.text) for std::terminate()
    arm_exceptions_callterm.o(.ARM.exidx) refers to arm_exceptions_callterm.o(.text) for .text
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    arm_begincatch_noexceptions.o(.ARM.exidx) refers to arm_begincatch_noexceptions.o(.text) for .text
    arm_exceptions_support.o(.text) refers to arm_exceptions_support.o(.constdata) for .constdata
    arm_exceptions_support.o(.ARM.exidx) refers to arm_exceptions_support.o(.text) for .text
    arm_exceptions_terminate.o(.text) refers to arm_exceptions_globs.o(.text) for __cxa_get_globals
    arm_exceptions_terminate.o(.text) refers to abort.o(.text) for abort
    arm_exceptions_terminate.o(.ARM.exidx) refers to arm_exceptions_terminate.o(.text) for .text
    arm_exceptions_globs.o(.text) refers to abort.o(.text) for abort
    arm_exceptions_globs.o(.text) refers to rt_eh_globals_addr_intlibspace.o(.text) for __rt_eh_globals_addr
    arm_exceptions_globs.o(.text) refers to h1_alloc.o(.text) for malloc
    arm_exceptions_globs.o(.text) refers to arm_exceptions_mem.o(.text) for __ARM_exceptions_buffer_init
    arm_exceptions_globs.o(.ARM.exidx) refers to arm_exceptions_globs.o(.text) for .text
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_hd.o(.text) for __user_initial_stackheap
    rt_eh_globals_addr.o(.text) refers to rt_eh_globals_addr.o(.bss) for __rt_eh_globals_addr_data
    rt_eh_globals_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    h1_alloc.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc_mt.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.___Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i._free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to h1_free.o(.text) for free
    heap2.o(i._realloc$realtime) refers to h1_alloc.o(.text) for malloc
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._FDIterate) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i.___Heap_Initialize$realtime$concurrent) refers to mutex_dummy.o(.text) for _mutex_initialize
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers to heap2mt.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(i._FDIterate) for _FDIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i._free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_free.o(.text) for free
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_alloc.o(.text) for malloc
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    arm_exceptions_mem.o(.text) refers to h1_alloc.o(.text) for malloc
    arm_exceptions_mem.o(.ARM.exidx) refers to arm_exceptions_mem.o(.text) for .text
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc1.o(.emb_text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init.o(.text) for __Heap_Initialize
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_init_mt.o(.text) refers to mutex_dummy.o(.text) for _mutex_initialize
    h1_free_mt.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig.o(CL$$defsig) refers to defsig_pvfn_inner.o(.text) for __rt_SIGPVFN_inner
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    maybetermalloc2.o(.emb_text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free.o(.text) for free
    h1_extend_mt.o(.text) refers to h1_free_mt.o(.text) for _free_internal
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final.o(.text) for __Heap_Finalize
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    pcuart.o(.constdata__ZTV6PCUart) refers to pcuart.o(.constdata__ZTI6PCUart) for typeinfo for PCUart
    pcuart.o(.constdata__ZTV6PCUart) refers to pcuart.o(i._ZN6PCUart5writeEPKhj) for PCUart::write(const unsigned char*, unsigned)
    pcuart.o(.constdata__ZTV6PCUart) refers to pcuart.o(i._ZThn12_N6PCUart5writeEPKhj) for thunk{-12} to PCUart::write(const unsigned char*, unsigned)
    pcuart.o(i._ZN6PCUart11getInstanceEv) refers to cxa_guard_acquire.o(i.__cxa_guard_acquire) for __cxa_guard_acquire
    pcuart.o(i._ZN6PCUart11getInstanceEv) refers to pcuart.o(i._ZN6PCUartC1Ev) for PCUart::PCUart()
    pcuart.o(i._ZN6PCUart11getInstanceEv) refers to pcuart.o(.data__ZZN6PCUart11getInstanceEvE4uart) for guard variable for PCUart::getInstance()::uart
    pcuart.o(i._ZN6PCUart11getInstanceEv) refers to pcuart.o(.bss__ZZN6PCUart11getInstanceEvE4uart) for PCUart::getInstance()::uart
    pcuart.o(.ARM.exidx) refers to pcuart.o(i._ZN6PCUart11getInstanceEv) for i._ZN6PCUart11getInstanceEv
    pcuart.o(.constdata__ZTV10BaseFormat) refers to pcuart.o(.constdata__ZTI10BaseFormat) for typeinfo for BaseFormat
    pcuart.o(.constdata__ZTV10BaseFormat) refers to pure_virt.o(i.__cxa_pure_virtual) for __cxa_pure_virtual
    pcuart.o(.constdata__ZTV10BaseOutput) refers to pcuart.o(.constdata__ZTI10BaseOutput) for typeinfo for BaseOutput
    pcuart.o(.constdata__ZTV10BaseOutput) refers to pure_virt.o(i.__cxa_pure_virtual) for __cxa_pure_virtual
    pcuart.o(.constdata__ZTI6PCUart) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) for vtable for __cxxabiv1::__vmi_class_type_info
    pcuart.o(.constdata__ZTI6PCUart) refers to pcuart.o(.constdata__ZTS6PCUart) for typeinfo name for PCUart
    pcuart.o(.constdata__ZTI6PCUart) refers to pcuart.o(.constdata__ZTI10BaseFormat) for typeinfo for BaseFormat
    pcuart.o(.constdata__ZTI6PCUart) refers to pcuart.o(.constdata__ZTI10BaseOutput) for typeinfo for BaseOutput
    pcuart.o(.constdata__ZTI6PCUart) refers to pcuart.o(.constdata__ZTI12MessageQueue) for typeinfo for MessageQueue
    pcuart.o(.constdata__ZTI10BaseOutput) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    pcuart.o(.constdata__ZTI10BaseOutput) refers to pcuart.o(.constdata__ZTS10BaseOutput) for typeinfo name for BaseOutput
    pcuart.o(.constdata__ZTI10BaseFormat) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    pcuart.o(.constdata__ZTI10BaseFormat) refers to pcuart.o(.constdata__ZTS10BaseFormat) for typeinfo name for BaseFormat
    pcuart.o(.constdata__ZTI12MessageQueue) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    pcuart.o(.constdata__ZTI12MessageQueue) refers to pcuart.o(.constdata__ZTS12MessageQueue) for typeinfo name for MessageQueue
    mdbuart.o(.constdata__ZTV7MDBUart) refers to mdbuart.o(.constdata__ZTI7MDBUart) for typeinfo for MDBUart
    mdbuart.o(.constdata__ZTV7MDBUart) refers to mdbuart.o(i._ZN7MDBUart5writeEPKhj) for MDBUart::write(const unsigned char*, unsigned)
    mdbuart.o(.constdata__ZTV7MDBUart) refers to mdbuart.o(i._ZThn16_N7MDBUart5writeEPKhj) for thunk{-16} to MDBUart::write(const unsigned char*, unsigned)
    mdbuart.o(i._ZN7MDBUart11getInstanceEv) refers to cxa_guard_acquire.o(i.__cxa_guard_acquire) for __cxa_guard_acquire
    mdbuart.o(i._ZN7MDBUart11getInstanceEv) refers to mdbuart.o(i._ZN7MDBUartC1Ev) for MDBUart::MDBUart()
    mdbuart.o(i._ZN7MDBUart11getInstanceEv) refers to mdbuart.o(.data__ZZN7MDBUart11getInstanceEvE4uart) for guard variable for MDBUart::getInstance()::uart
    mdbuart.o(i._ZN7MDBUart11getInstanceEv) refers to mdbuart.o(.bss__ZZN7MDBUart11getInstanceEvE4uart) for MDBUart::getInstance()::uart
    mdbuart.o(.ARM.exidx) refers to mdbuart.o(i._ZN7MDBUart11getInstanceEv) for i._ZN7MDBUart11getInstanceEv
    mdbuart.o(.constdata__ZTI7MDBUart) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) for vtable for __cxxabiv1::__vmi_class_type_info
    mdbuart.o(.constdata__ZTI7MDBUart) refers to mdbuart.o(.constdata__ZTS7MDBUart) for typeinfo name for MDBUart
    mdbuart.o(.constdata__ZTI7MDBUart) refers to pcuart.o(.constdata__ZTI10BaseOutput) for typeinfo for BaseOutput
    mdbuart.o(.constdata__ZTI7MDBUart) refers to pcuart.o(.constdata__ZTI10BaseFormat) for typeinfo for BaseFormat
    mdbuart.o(.constdata__ZTI7MDBUart) refers to pcuart.o(.constdata__ZTI12MessageQueue) for typeinfo for MessageQueue
    scanqrcodeuart.o(.constdata__ZTV14ScanQRCodeUart) refers to scanqrcodeuart.o(.constdata__ZTI14ScanQRCodeUart) for typeinfo for ScanQRCodeUart
    scanqrcodeuart.o(.constdata__ZTV14ScanQRCodeUart) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart5writeEPKhj) for ScanQRCodeUart::write(const unsigned char*, unsigned)
    scanqrcodeuart.o(.constdata__ZTV14ScanQRCodeUart) refers to scanqrcodeuart.o(i._ZThn16_N14ScanQRCodeUart5writeEPKhj) for thunk{-16} to ScanQRCodeUart::write(const unsigned char*, unsigned)
    scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv) refers to cxa_guard_acquire.o(i.__cxa_guard_acquire) for __cxa_guard_acquire
    scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev) for ScanQRCodeUart::ScanQRCodeUart()
    scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv) refers to scanqrcodeuart.o(.data__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE) for guard variable for ScanQRCodeUart::getInstance()::INSTANCE
    scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv) refers to scanqrcodeuart.o(.bss__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE) for ScanQRCodeUart::getInstance()::INSTANCE
    scanqrcodeuart.o(.ARM.exidx) refers to scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv) for i._ZN14ScanQRCodeUart11getInstanceEv
    scanqrcodeuart.o(.constdata__ZTI14ScanQRCodeUart) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) for vtable for __cxxabiv1::__vmi_class_type_info
    scanqrcodeuart.o(.constdata__ZTI14ScanQRCodeUart) refers to scanqrcodeuart.o(.constdata__ZTS14ScanQRCodeUart) for typeinfo name for ScanQRCodeUart
    scanqrcodeuart.o(.constdata__ZTI14ScanQRCodeUart) refers to pcuart.o(.constdata__ZTI10BaseOutput) for typeinfo for BaseOutput
    scanqrcodeuart.o(.constdata__ZTI14ScanQRCodeUart) refers to pcuart.o(.constdata__ZTI10BaseFormat) for typeinfo for BaseFormat
    scanqrcodeuart.o(.constdata__ZTI14ScanQRCodeUart) refers to pcuart.o(.constdata__ZTI12MessageQueue) for typeinfo for MessageQueue
    elevatormotor.o(.ARM.exidx) refers to elevatormotor.o(i._ZN13ElevatorMotor7isFaultEv) for i._ZN13ElevatorMotor7isFaultEv
    rotationmotor.o(.ARM.exidx) refers to rotationmotor.o(i._ZN13RotationMotor7isFalutEv) for i._ZN13RotationMotor7isFalutEv
    mainthread.o(.constdata__ZTV10MainThread) refers to mainthread.o(.constdata__ZTI10MainThread) for typeinfo for MainThread
    mainthread.o(.constdata__ZTV10MainThread) refers to mainthread.o(i._ZN10MainThread3runEv) for MainThread::run()
    mainthread.o(i._ZN10BaseOutputC2ERKS_) refers to pcuart.o(.constdata__ZTV10BaseOutput) for vtable for BaseOutput
    mainthread.o(.ARM.exidx) refers to mainthread.o(i._ZN10BaseOutputC2ERKS_) for i._ZN10BaseOutputC2ERKS_
    mainthread.o(.ARM.exidx) refers to mainthread.o(i._ZN11BaseMessageC1EPvj) for i._ZN11BaseMessageC1EPvj
    mainthread.o(i._ZN12MessageQueue4recvEPvj) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    mainthread.o(.ARM.exidx) refers to mainthread.o(i._ZN12MessageQueue4recvEPvj) for i._ZN12MessageQueue4recvEPvj
    mainthread.o(i._ZN10BaseFormatC2ERKS_) refers to pcuart.o(.constdata__ZTV10BaseFormat) for vtable for BaseFormat
    mainthread.o(.ARM.exidx) refers to mainthread.o(i._ZN10BaseFormatC2ERKS_) for i._ZN10BaseFormatC2ERKS_
    mainthread.o(.constdata__ZTI10MainThread) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) for vtable for __cxxabiv1::__vmi_class_type_info
    mainthread.o(.constdata__ZTI10MainThread) refers to mainthread.o(.constdata__ZTS10MainThread) for typeinfo name for MainThread
    mainthread.o(.constdata__ZTI10MainThread) refers to mainthread.o(.constdata__ZTI6Thread) for typeinfo for Thread
    mainthread.o(.constdata__ZTI10MainThread) refers to pcuart.o(.constdata__ZTI12MessageQueue) for typeinfo for MessageQueue
    mainthread.o(.constdata__ZTI6Thread) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    mainthread.o(.constdata__ZTI6Thread) refers to mainthread.o(.constdata__ZTS6Thread) for typeinfo name for Thread
    thread.o(.constdata__ZTV6Thread) refers to mainthread.o(.constdata__ZTI6Thread) for typeinfo for Thread
    thread.o(.constdata__ZTV6Thread) refers to pure_virt.o(i.__cxa_pure_virtual) for __cxa_pure_virtual
    logger.o(.constdata__ZTVN5myLib6LoggerE) refers to logger.o(.constdata__ZTIN5myLib6LoggerE) for typeinfo for myLib::Logger
    logger.o(.constdata__ZTVN5myLib6LoggerE) refers to pure_virt.o(i.__cxa_pure_virtual) for __cxa_pure_virtual
    logger.o(.constdata__ZTIN5myLib6LoggerE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    logger.o(.constdata__ZTIN5myLib6LoggerE) refers to logger.o(.constdata__ZTSN5myLib6LoggerE) for typeinfo name for myLib::Logger
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) for typeinfo for __cxxabiv1::__fundamental_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD1Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv123__fundamental_type_infoD0Ev) for __cxxabiv1::__fundamental_type_info::~__fundamental_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) for typeinfo for __cxxabiv1::__array_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD1Ev) for __cxxabiv1::__array_type_info::~__array_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__array_type_infoD0Ev) for __cxxabiv1::__array_type_info::~__array_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) for typeinfo for __cxxabiv1::__function_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD1Ev) for __cxxabiv1::__function_type_info::~__function_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__function_type_infoD0Ev) for __cxxabiv1::__function_type_info::~__function_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) for typeinfo for __cxxabiv1::__enum_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD1Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv116__enum_type_infoD0Ev) for __cxxabiv1::__enum_type_info::~__enum_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD1Ev) for __cxxabiv1::__class_type_info::~__class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__class_type_infoD0Ev) for __cxxabiv1::__class_type_info::~__class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) for typeinfo for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD1Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv120__si_class_type_infoD0Ev) for __cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) for typeinfo for __cxxabiv1::__vmi_class_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD1Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv121__vmi_class_type_infoD0Ev) for __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD1Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv117__pbase_type_infoD0Ev) for __cxxabiv1::__pbase_type_info::~__pbase_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) for typeinfo for __cxxabiv1::__pointer_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD1Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv119__pointer_type_infoD0Ev) for __cxxabiv1::__pointer_type_info::~__pointer_type_info__deallocating()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) for typeinfo for __cxxabiv1::__pointer_to_member_type_info
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD1Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
    lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(i._ZN10__cxxabiv129__pointer_to_member_type_infoD0Ev) for __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info__deallocating()
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i._ZNSt9type_infodlEPv) for i._ZNSt9type_infodlEPv
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv123__fundamental_type_infoE) for typeinfo name for __cxxabiv1::__fundamental_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv123__fundamental_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__array_type_infoE) for typeinfo name for __cxxabiv1::__array_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__array_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv120__function_type_infoE) for typeinfo name for __cxxabiv1::__function_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__function_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv116__enum_type_infoE) for typeinfo name for __cxxabiv1::__enum_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv116__enum_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__class_type_infoE) for typeinfo name for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv120__si_class_type_infoE) for typeinfo name for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv120__si_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv121__vmi_class_type_infoE) for typeinfo name for __cxxabiv1::__vmi_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv121__vmi_class_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__class_type_infoE) for typeinfo for __cxxabiv1::__class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv117__pbase_type_infoE) for typeinfo name for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv119__pointer_type_infoE) for typeinfo name for __cxxabiv1::__pointer_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv119__pointer_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv120__si_class_type_infoE) for vtable for __cxxabiv1::__si_class_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTSN10__cxxabiv129__pointer_to_member_type_infoE) for typeinfo name for __cxxabiv1::__pointer_to_member_type_info
    lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv129__pointer_to_member_type_infoE) refers to lib_rtti_impl.o(.constdata__ZTIN10__cxxabiv117__pbase_type_infoE) for typeinfo for __cxxabiv1::__pbase_type_info
    lib_rtti_impl.o(i.__ARM_common_noexcept_landing) refers to arm_exceptions_callterm.o(.text) for __cxa_call_terminate
    lib_rtti_impl.o(.ARM.exidx) refers to lib_rtti_impl.o(i.__ARM_common_noexcept_landing) for i.__ARM_common_noexcept_landing
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(.constdata__ZTISt9type_info) for typeinfo for std::type_info
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(i._ZNSt9type_infoD1Ev) for std::type_info::~type_info()
    type_info_dtor.o(.constdata__ZTVSt9type_info) refers to type_info_dtor.o(i._ZNSt9type_infoD0Ev) for std::type_info::~type_info__deallocating()
    type_info_dtor.o(.constdata__ZTISt9type_info) refers to lib_rtti_impl.o(.constdata__ZTVN10__cxxabiv117__class_type_infoE) for vtable for __cxxabiv1::__class_type_info
    type_info_dtor.o(.constdata__ZTISt9type_info) refers to type_info_dtor.o(.constdata__ZTSSt9type_info) for typeinfo name for std::type_info


==============================================================================

Removing Unused input sections from the image.

    Removing core_cm3.o(.emb_text), (32 bytes).
    Removing system_stm32f10x.o(i.SystemCoreClockUpdate), (164 bytes).
    Removing system_stm32f10x.o(.ARM.exidx), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx), (8 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing appconfig.o(i._ZN9AppConfigC1Ev), (2 bytes).
    Removing appconfig.o(.ARM.exidx), (8 bytes).
    Removing flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c110ReadBufferEj), (32 bytes).
    Removing flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c111WriteBufferEj), (48 bytes).
    Removing flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c113WriteHalfWordEjt), (64 bytes).
    Removing flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c14CopyEtPKvt), (36 bytes).
    Removing flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c18WaitDoneEt), (84 bytes).
    Removing flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19EarsePageEj), (76 bytes).
    Removing flash.o(i._ZN30_INTERNAL_9_Flash_cpp_170e27c19WritePageEjPKtt), (64 bytes).
    Removing flash.o(i._ZN5Flash4readEjPvj), (26 bytes).
    Removing flash.o(i._ZN5Flash5writeEjPKvj), (94 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.ARM.exidx), (8 bytes).
    Removing flash.o(.bss), (2048 bytes).
    Removing pcuart.o(i._ZThn12_N6PCUart5writeEPKhj), (22 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(i._ZThn16_N7MDBUart5writeEPKhj), (22 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(i._ZThn16_N14ScanQRCodeUart5writeEPKhj), (22 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing positionswitch.o(i._ZN14PositionSwitch5vInitEv), (220 bytes).
    Removing positionswitch.o(i._ZN14PositionSwitch9xGetValueEv), (76 bytes).
    Removing positionswitch.o(.ARM.exidx), (8 bytes).
    Removing positionswitch.o(.ARM.exidx), (8 bytes).
    Removing motor.o(i._ZN5Motor5vInitEv), (108 bytes).
    Removing motor.o(i._ZN5Motor7vSetDirENS_3DirE), (60 bytes).
    Removing motor.o(.ARM.exidx), (8 bytes).
    Removing motor.o(.ARM.exidx), (8 bytes).
    Removing elevatormotor.o(i._ZN13ElevatorMotor10vSetEnableEb), (24 bytes).
    Removing elevatormotor.o(i._ZN13ElevatorMotor5vInitEv), (72 bytes).
    Removing elevatormotor.o(i._ZN13ElevatorMotor7vSetDirENS_3DirE), (36 bytes).
    Removing elevatormotor.o(i._ZN13ElevatorMotor9xToTargetEj), (144 bytes).
    Removing elevatormotor.o(.ARM.exidx), (8 bytes).
    Removing elevatormotor.o(.ARM.exidx), (8 bytes).
    Removing elevatormotor.o(.ARM.exidx), (8 bytes).
    Removing elevatormotor.o(.ARM.exidx), (8 bytes).
    Removing elevatormotor.o(.data), (4 bytes).
    Removing rotationmotor.o(i._ZN13RotationMotor10vSetEnableEb), (24 bytes).
    Removing rotationmotor.o(i._ZN13RotationMotor5vInitEv), (124 bytes).
    Removing rotationmotor.o(i._ZN13RotationMotor7vSetDirENS_3DirE), (36 bytes).
    Removing rotationmotor.o(i._ZN13RotationMotor9xToTargetEj), (144 bytes).
    Removing rotationmotor.o(.ARM.exidx), (8 bytes).
    Removing rotationmotor.o(.ARM.exidx), (8 bytes).
    Removing rotationmotor.o(.ARM.exidx), (8 bytes).
    Removing rotationmotor.o(.ARM.exidx), (8 bytes).
    Removing rotationmotor.o(.data), (4 bytes).
    Removing currentsense.o(i._ZN12CurrentSense11vStartCheckEv), (240 bytes).
    Removing currentsense.o(.ARM.exidx), (8 bytes).
    Removing currentsense.o(.data), (2 bytes).
    Removing ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd11vTimer6InitEv), (48 bytes).
    Removing ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd12vTimer6DelayEj), (24 bytes).
    Removing ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd7ReadBitEv), (56 bytes).
    Removing ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd8ReadByteEv), (30 bytes).
    Removing ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9IsCheckedEv), (108 bytes).
    Removing ds18b20.o(i._ZN33_INTERNAL_11_DS18B20_cpp_23bfcabd9WriteByteEh), (80 bytes).
    Removing ds18b20.o(i._ZN7DS18B205vInitEv), (52 bytes).
    Removing ds18b20.o(i._ZN7DS18B209xGetValueEPj), (48 bytes).
    Removing ds18b20.o(.ARM.exidx), (8 bytes).
    Removing ds18b20.o(.ARM.exidx), (8 bytes).
    Removing ds18b20.o(.ARM.exidx), (8 bytes).
    Removing ds18b20.o(.ARM.exidx), (8 bytes).
    Removing ds18b20.o(.ARM.exidx), (8 bytes).
    Removing ds18b20.o(.ARM.exidx), (8 bytes).
    Removing ds18b20.o(.ARM.exidx), (8 bytes).
    Removing ds18b20.o(.ARM.exidx), (8 bytes).
    Removing mainthread.o(.ARM.exidx), (8 bytes).
    Removing mainthread.o(.ARM.exidx), (8 bytes).
    Removing messagequeue.o(.ARM.exidx), (8 bytes).
    Removing mutex.o(i._ZN5MutexC1EPKc), (34 bytes).
    Removing mutex.o(.ARM.exidx), (8 bytes).
    Removing thread.o(.ARM.exidx), (8 bytes).
    Removing thread.o(.ARM.exidx), (8 bytes).
    Removing thread.o(.ARM.exidx), (8 bytes).
    Removing thread.o(.ARM.exidx), (8 bytes).
    Removing basemessage.o(i._ZN11BaseMessage9isCheckedEv), (94 bytes).
    Removing basemessage.o(.ARM.exidx), (8 bytes).
    Removing baseformat.o(i._ZN10BaseFormat11formatWriteEPKcz), (242 bytes).
    Removing baseformat.o(.ARM.exidx), (8 bytes).
    Removing baseoutput.o(i._ZN10BaseOutput5buildEPh), (66 bytes).
    Removing baseoutput.o(.ARM.exidx), (8 bytes).
    Removing logger.o(i._ZN5myLib6Logger6formatEPKcz), (192 bytes).
    Removing logger.o(i._ZN5myLib6LoggerC2EPh), (12 bytes).
    Removing logger.o(i._ZN5myLib6LoggerlsEi), (36 bytes).
    Removing logger.o(.ARM.exidx), (8 bytes).
    Removing logger.o(.ARM.exidx), (8 bytes).
    Removing logger.o(.ARM.exidx), (8 bytes).
    Removing string.o(i._ZN5myLib11xStringCopyEPKcPc), (26 bytes).
    Removing string.o(i._ZN5myLib11xStringCopyEPKcjPc), (26 bytes).
    Removing string.o(i._ZN5myLib12xStringEqualEPKcS1_), (28 bytes).
    Removing string.o(i._ZN5myLib12xStringSplitEPKcS1_PPc), (80 bytes).
    Removing string.o(i._ZN5myLib12xStringToHexEPKcPb), (148 bytes).
    Removing string.o(i._ZN5myLib12xStringToIntEPKcPb), (126 bytes).
    Removing string.o(i._ZN5myLib14xStringIndexOfEPKcS1_), (48 bytes).
    Removing string.o(i._ZN5myLib14xStringIndexOfEPKcc), (30 bytes).
    Removing string.o(i._ZN5myLib14xStringValueOfEPcPKhj), (52 bytes).
    Removing string.o(i._ZN5myLib14xStringValueOfEPcihb), (120 bytes).
    Removing string.o(i._ZN5myLib16xStringGetLengthEPKc), (18 bytes).
    Removing string.o(i._ZN5myLib16xStringSubStringEPKcjjPc), (24 bytes).
    Removing string.o(i._ZN5myLib17xStringIndexOfAllEPKcS1_), (56 bytes).
    Removing string.o(i._ZNK5myLib11ConstString7indexOfEPKc), (48 bytes).
    Removing string.o(i._ZNK5myLib11ConstString7indexOfEc), (30 bytes).
    Removing string.o(i._ZNK5myLib11ConstStringeqERKS0_), (68 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.ARM.exidx), (8 bytes).
    Removing string.o(.constdata), (32 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_lib.o(i._Z18osRtxKernelPreInitv), (2 bytes).
    Removing rtx_lib.o(i._Z25__user_perthread_libspacev), (88 bytes).
    Removing rtx_lib.o(i._Z29_platform_post_stackheap_initv), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing rtx_config.o(.ARM.exidx), (8 bytes).
    Removing rtx_config.o(.ARM.exidx), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (156 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (62 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.text.osDelay), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelay), (20 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (174 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (328 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (88 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing pcuart.o(.ARM.exidx), (8 bytes).
    Removing pcuart.o(.constdata__ZTI6PCUart), (40 bytes).
    Removing pcuart.o(.constdata__ZTI10BaseOutput), (8 bytes).
    Removing pcuart.o(.constdata__ZTI10BaseFormat), (8 bytes).
    Removing pcuart.o(.constdata__ZTI12MessageQueue), (8 bytes).
    Removing pcuart.o(.constdata__ZTS6PCUart), (8 bytes).
    Removing pcuart.o(.constdata__ZTS10BaseFormat), (13 bytes).
    Removing pcuart.o(.constdata__ZTS10BaseOutput), (13 bytes).
    Removing pcuart.o(.constdata__ZTS12MessageQueue), (15 bytes).
    Removing mdbuart.o(.ARM.exidx), (8 bytes).
    Removing mdbuart.o(.constdata__ZTI7MDBUart), (40 bytes).
    Removing mdbuart.o(.constdata__ZTS7MDBUart), (9 bytes).
    Removing scanqrcodeuart.o(.ARM.exidx), (8 bytes).
    Removing scanqrcodeuart.o(.constdata__ZTI14ScanQRCodeUart), (40 bytes).
    Removing scanqrcodeuart.o(.constdata__ZTS14ScanQRCodeUart), (17 bytes).
    Removing elevatormotor.o(i._ZN13ElevatorMotor7isFaultEv), (24 bytes).
    Removing elevatormotor.o(.ARM.exidx), (8 bytes).
    Removing rotationmotor.o(i._ZN13RotationMotor7isFalutEv), (24 bytes).
    Removing rotationmotor.o(.ARM.exidx), (8 bytes).
    Removing mainthread.o(.ARM.exidx), (8 bytes).
    Removing mainthread.o(.ARM.exidx), (8 bytes).
    Removing mainthread.o(.ARM.exidx), (8 bytes).
    Removing mainthread.o(.ARM.exidx), (8 bytes).
    Removing mainthread.o(.constdata__ZTI10MainThread), (32 bytes).
    Removing mainthread.o(.constdata__ZTI6Thread), (8 bytes).
    Removing mainthread.o(.constdata__ZTS10MainThread), (13 bytes).
    Removing mainthread.o(.constdata__ZTS6Thread), (8 bytes).
    Removing logger.o(.constdata__ZTVN5myLib6LoggerE), (16 bytes).
    Removing logger.o(.constdata__ZTIN5myLib6LoggerE), (8 bytes).
    Removing logger.o(.constdata__ZTSN5myLib6LoggerE), (16 bytes).

515 unused section(s) (total 15088 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_mem.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_globs.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_terminate.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_callterm.o ABSOLUTE
    ../../../edgfe/lib_src/arm_exceptions.c  0x00000000   Number         0  arm_exceptions_support.o ABSOLUTE
    ../../../edgfe/lib_src/arm_noexceptions.c 0x00000000   Number         0  arm_begincatch_noexceptions.o ABSOLUTE
    ../../../edgfe/lib_src/guard.c           0x00000000   Number         0  cxa_guard_release.o ABSOLUTE
    ../../../edgfe/lib_src/guard.c           0x00000000   Number         0  cxa_guard_acquire.o ABSOLUTE
    ../../../edgfe/lib_src/pure_virt.c       0x00000000   Number         0  pure_virt.o ABSOLUTE
    ../../../edgfe/lib_src/typeinfo.c        0x00000000   Number         0  lib_rtti_impl.o ABSOLUTE
    ../../../edgfe/lib_src/typeinfo.c        0x00000000   Number         0  type_info_dtor.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_eh_globals_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_eh_globals_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  mutex_dummy.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2mt.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    ..\CMSIS\core_cm3.c                      0x00000000   Number         0  core_cm3.o ABSOLUTE
    ..\CMSIS\startup_stm32f10x_hd.s          0x00000000   Number         0  startup_stm32f10x_hd.o ABSOLUTE
    ..\CMSIS\system_stm32f10x.c              0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    ..\User\AppConfig.cpp                    0x00000000   Number         0  appconfig.o ABSOLUTE
    ..\User\Custom\BaseFormat.cpp            0x00000000   Number         0  baseformat.o ABSOLUTE
    ..\User\Custom\BaseOutput.cpp            0x00000000   Number         0  baseoutput.o ABSOLUTE
    ..\User\Driver\CurrentSense.cpp          0x00000000   Number         0  currentsense.o ABSOLUTE
    ..\User\Driver\DS18B20.cpp               0x00000000   Number         0  ds18b20.o ABSOLUTE
    ..\User\Driver\ElevatorMotor.cpp         0x00000000   Number         0  elevatormotor.o ABSOLUTE
    ..\User\Driver\Flash.cpp                 0x00000000   Number         0  flash.o ABSOLUTE
    ..\User\Driver\MDBUart.cpp               0x00000000   Number         0  mdbuart.o ABSOLUTE
    ..\User\Driver\Motor.cpp                 0x00000000   Number         0  motor.o ABSOLUTE
    ..\User\Driver\PCUart.cpp                0x00000000   Number         0  pcuart.o ABSOLUTE
    ..\User\Driver\PositionSwitch.cpp        0x00000000   Number         0  positionswitch.o ABSOLUTE
    ..\User\Driver\RotationMotor.cpp         0x00000000   Number         0  rotationmotor.o ABSOLUTE
    ..\User\Driver\ScanQRCodeUart.cpp        0x00000000   Number         0  scanqrcodeuart.o ABSOLUTE
    ..\User\Message\AsyncMessage.cpp         0x00000000   Number         0  asyncmessage.o ABSOLUTE
    ..\User\Message\BaseMessage.cpp          0x00000000   Number         0  basemessage.o ABSOLUTE
    ..\User\Message\MDBMessage.cpp           0x00000000   Number         0  mdbmessage.o ABSOLUTE
    ..\User\Message\PCMessage.cpp            0x00000000   Number         0  pcmessage.o ABSOLUTE
    ..\User\Message\ScanQRCodeMessage.cpp    0x00000000   Number         0  scanqrcodemessage.o ABSOLUTE
    ..\User\Thread\MainThread.cpp            0x00000000   Number         0  mainthread.o ABSOLUTE
    ..\User\Thread\MessageQueue.cpp          0x00000000   Number         0  messagequeue.o ABSOLUTE
    ..\User\Thread\Mutex.cpp                 0x00000000   Number         0  mutex.o ABSOLUTE
    ..\User\Thread\Thread.cpp                0x00000000   Number         0  thread.o ABSOLUTE
    ..\User\main.cpp                         0x00000000   Number         0  main.o ABSOLUTE
    ..\User\myLib\ByteArray.cpp              0x00000000   Number         0  bytearray.o ABSOLUTE
    ..\User\myLib\Logger.cpp                 0x00000000   Number         0  logger.o ABSOLUTE
    ..\User\myLib\String.cpp                 0x00000000   Number         0  string.o ABSOLUTE
    ..\\CMSIS\\core_cm3.c                    0x00000000   Number         0  core_cm3.o ABSOLUTE
    D:\\keil\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    D:\keil\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    RESET                                    0x08000000   Section      304  startup_stm32f10x_hd.o(RESET)
    !!!main                                  0x08000130   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000138   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x0800016c   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x080001a8   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x080001c4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x080001c6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x080001c8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x080001ca   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x080001cc   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x080001cc   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x080001cc   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x080001d2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x080001d2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001d6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001d6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001de   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001e0   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001e0   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001e4   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x080001ec   Section       60  startup_stm32f10x_hd.o(.text)
    .text                                    0x08000228   Section      148  irq_cm3.o(.text)
    .text                                    0x080002bc   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000346   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080003aa   Section       68  rt_memclr.o(.text)
    .text                                    0x080003ee   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0800043c   Section        0  heapauxi.o(.text)
    .text                                    0x08000442   Section        0  defsig_pvfn_outer.o(.text)
    .text                                    0x08000450   Section        0  defsig_exit.o(.text)
    .text                                    0x0800045c   Section        0  defsig_pvfn_inner.o(.text)
    .text                                    0x0800048c   Section        0  sys_exit.o(.text)
    .text                                    0x08000498   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080004e2   Section        0  exit.o(.text)
    .text                                    0x080004f4   Section        0  defsig_general.o(.text)
    .text                                    0x08000526   Section        0  sys_wrch.o(.text)
    .text                                    0x08000534   Section        8  libspace.o(.text)
    .text                                    0x0800053c   Section        2  use_no_semi.o(.text)
    [Anonymous Symbol]                       0x0800053e   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    .text                                    0x0800053e   Section        0  indicate_semi.o(.text)
    MessageQueueGet                          0x0800053f   Thumb Code    70  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08000584   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x08000585   Thumb Code   100  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x080005e8   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x080005e9   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08000604   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x0800060c   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08000610   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x08000630   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x08000634   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x08000638   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x0800063c   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08000644   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x08000674   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08000678   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x0800067c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08000680   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08000684   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x08000685   Thumb Code   106  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x080006f0   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x080006f1   Thumb Code    80  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x0800073c   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08000740   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x0800076c   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x08000770   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08000774   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x0800079c   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080007a0   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x080007c0   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080007c4   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x0800082c   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08000830   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x08000850   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x08000854   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x080008cc   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x080008d0   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x080008f0   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x080008f4   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x08000914   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08000918   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x08000938   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x0800093c   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x0800095c   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08000960   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x08000962   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x080009e2   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08000a34   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08000a6a   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000aa2   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08000aea   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08000b3e   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x08000b3f   Thumb Code   192  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08000bfe   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08000c44   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x08000cd0   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08000cd4   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x08000d40   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x08000d44   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08000d48   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x08000d49   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x08000d7c   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08000d80   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x08000d81   Thumb Code   140  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x08000e08   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08000e0c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x08000e0d   Thumb Code    88  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x08000e60   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08000e64   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x08000e98   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08000e9c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x08000ef8   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08000efc   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x08000efd   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x08000f50   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08000f54   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08000f6a   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08000f96   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08000faa   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08000fd2   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x08000fd3   Thumb Code    42  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08000ffc   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x0800100c   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08001010   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08001018   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x08001038   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x0800103c   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08001040   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x08001088   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x0800108c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x08001090   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x08001094   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08001098   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x080010a4   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x080010a8   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x080010dc   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x080010e0   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08001104   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08001170   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08001174   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x080011ac   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x080011b0   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x080011b4   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x080011b8   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x080011b9   Thumb Code    88  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x0800120c   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08001210   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x08001218   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x0800121c   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x0800123c   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08001240   Section        0  rtx_thread.o(.text.osThreadTerminate)
    __arm_cp.32_0                            0x08001260   Number         4  rtx_thread.o(.text.osThreadTerminate)
    [Anonymous Symbol]                       0x08001264   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x08001265   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x0800126c   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08001270   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x08001271   Thumb Code   376  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x080013dc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x080013e0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x080013e4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x080013e8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x080013e9   Thumb Code   140  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x08001464   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x08001468   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x0800146c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x08001470   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08001474   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x08001475   Thumb Code   232  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x08001558   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0800155c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x0800155d   Thumb Code   308  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x08001688   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x0800168c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08001690   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x08001691   Thumb Code   192  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x0800174c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08001750   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x08001751   Thumb Code   148  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x080017e0   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x080017e4   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x080017e5   Thumb Code   196  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x080018a4   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x080018a8   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x080018a9   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x08001910   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08001914   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x08001915   Thumb Code   180  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x080019c4   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080019c8   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x080019c9   Thumb Code   104  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x08001a2c   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08001a30   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x08001a31   Thumb Code   476  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x08001bf8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x08001bfc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x08001c00   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x08001c04   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x08001c08   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08001c0c   Section        0  rtx_thread.o(.text.svcRtxThreadTerminate)
    svcRtxThreadTerminate                    0x08001c0d   Thumb Code   188  rtx_thread.o(.text.svcRtxThreadTerminate)
    __arm_cp.55_0                            0x08001cc4   Number         4  rtx_thread.o(.text.svcRtxThreadTerminate)
    i.SystemInit                             0x08001cc8   Section        0  system_stm32f10x.o(i.SystemInit)
    i.USART1_IRQHandler                      0x08001d28   Section        0  mdbuart.o(i.USART1_IRQHandler)
    i.USART2_IRQHandler                      0x08001d8c   Section        0  pcuart.o(i.USART2_IRQHandler)
    i.USART3_IRQHandler                      0x08001df0   Section        0  scanqrcodeuart.o(i.USART3_IRQHandler)
    i._Z11_mutex_freePPv                     0x08001e54   Section        0  rtx_lib.o(i._Z11_mutex_freePPv)
    __tagsym$$used                           0x08001e55   Number         0  rtx_lib.o(i._Z11_mutex_freePPv)
    i._Z14_mutex_acquirePPv                  0x08001e60   Section        0  rtx_lib.o(i._Z14_mutex_acquirePPv)
    __tagsym$$used                           0x08001e61   Number         0  rtx_lib.o(i._Z14_mutex_acquirePPv)
    i._Z14_mutex_releasePPv                  0x08001e76   Section        0  rtx_lib.o(i._Z14_mutex_releasePPv)
    __tagsym$$used                           0x08001e77   Number         0  rtx_lib.o(i._Z14_mutex_releasePPv)
    i._Z17_mutex_initializePPv               0x08001e88   Section        0  rtx_lib.o(i._Z17_mutex_initializePPv)
    __tagsym$$used                           0x08001e89   Number         0  rtx_lib.o(i._Z17_mutex_initializePPv)
    i._ZN10BaseFormatC2ERKS_                 0x08001eac   Section        0  mainthread.o(i._ZN10BaseFormatC2ERKS_)
    i._ZN10BaseOutputC2ERKS_                 0x08001ec0   Section        0  mainthread.o(i._ZN10BaseOutputC2ERKS_)
    i._ZN10MainThread3runEv                  0x08001ed8   Section        0  mainthread.o(i._ZN10MainThread3runEv)
    i._ZN10MainThreadC1Ev                    0x08002098   Section        0  mainthread.o(i._ZN10MainThreadC1Ev)
    i._ZN11BaseMessageC1EPvj                 0x080020e0   Section        0  mainthread.o(i._ZN11BaseMessageC1EPvj)
    i._ZN12MessageQueue4recvEPvj             0x080020e6   Section        0  mainthread.o(i._ZN12MessageQueue4recvEPvj)
    i._ZN12MessageQueueC1EPKcPyjj            0x080020fc   Section        0  messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj)
    i._ZN14ScanQRCodeUart11getInstanceEv     0x08002140   Section        0  scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv)
    i._ZN14ScanQRCodeUart17onMessageReceiverEPvj 0x0800216c   Section        0  scanqrcodeuart.o(i._ZN14ScanQRCodeUart17onMessageReceiverEPvj)
    i._ZN14ScanQRCodeUart5writeEPKhj         0x08002196   Section        0  scanqrcodeuart.o(i._ZN14ScanQRCodeUart5writeEPKhj)
    i._ZN14ScanQRCodeUartC1Ev                0x080021b4   Section        0  scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev)
    i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv 0x08002220   Section        0  rtx_lib.o(i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv)
    [local to rtx_lib_c]::os_kernel_is_active() 0x08002221   Thumb Code    28  rtx_lib.o(i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv)
    i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj 0x08002240   Section        0  pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj)
    [local to PCUart_cpp]::BufferOver(unsigned, unsigned) 0x08002241   Thumb Code    72  pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj)
    i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10InitDriverEv 0x08002290   Section        0  pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10InitDriverEv)
    [local to PCUart_cpp]::InitDriver()      0x08002291   Thumb Code   146  pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10InitDriverEv)
    i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb9WriteByteEh 0x08002338   Section        0  pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb9WriteByteEh)
    [local to PCUart_cpp]::WriteByte(unsigned char) 0x08002339   Thumb Code    22  pcuart.o(i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb9WriteByteEh)
    i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj 0x08002354   Section        0  mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj)
    [local to MDBUart_cpp]::BufferOver(unsigned, unsigned) 0x08002355   Thumb Code    72  mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj)
    i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610InitDriverEv 0x080023a4   Section        0  mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610InitDriverEv)
    [local to MDBUart_cpp]::InitDriver()     0x080023a5   Thumb Code   144  mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610InitDriverEv)
    i._ZN33_INTERNAL_11_MDBUart_cpp_4712e8669WriteByteEh 0x08002448   Section        0  mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e8669WriteByteEh)
    [local to MDBUart_cpp]::WriteByte(unsigned char) 0x08002449   Thumb Code    22  mdbuart.o(i._ZN33_INTERNAL_11_MDBUart_cpp_4712e8669WriteByteEh)
    i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj 0x08002464   Section        0  scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj)
    [local to ScanQRCodeUart_cpp]::BufferOver(unsigned, unsigned) 0x08002465   Thumb Code    72  scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj)
    i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610InitDriverEv 0x080024b4   Section        0  scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610InitDriverEv)
    [local to ScanQRCodeUart_cpp]::InitDriver() 0x080024b5   Thumb Code   144  scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610InitDriverEv)
    i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b69WriteByteEh 0x08002558   Section        0  scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b69WriteByteEh)
    [local to ScanQRCodeUart_cpp]::WriteByte(unsigned char) 0x08002559   Thumb Code    20  scanqrcodeuart.o(i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b69WriteByteEh)
    i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6711SetSysClockEv 0x08002574   Section        0  system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6711SetSysClockEv)
    [local to system_stm32f10x_c]::SetSysClock() 0x08002575   Thumb Code     8  system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6711SetSysClockEv)
    i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6715SetSysClockTo72Ev 0x0800257c   Section        0  system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6715SetSysClockTo72Ev)
    [local to system_stm32f10x_c]::SetSysClockTo72() 0x0800257d   Thumb Code   214  system_stm32f10x.o(i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6715SetSysClockTo72Ev)
    i._ZN6PCUart11getInstanceEv              0x0800265c   Section        0  pcuart.o(i._ZN6PCUart11getInstanceEv)
    i._ZN6PCUart17onMessageReceiverEPhj      0x08002688   Section        0  pcuart.o(i._ZN6PCUart17onMessageReceiverEPhj)
    i._ZN6PCUart5writeEPKhj                  0x080026b2   Section        0  pcuart.o(i._ZN6PCUart5writeEPKhj)
    i._ZN6PCUartC1Ev                         0x080026d0   Section        0  pcuart.o(i._ZN6PCUartC1Ev)
    i._ZN6Thread20ThreadStartFuncationEPv    0x08002738   Section        0  thread.o(i._ZN6Thread20ThreadStartFuncationEPv)
    i._ZN6Thread5startEv                     0x0800274c   Section        0  thread.o(i._ZN6Thread5startEv)
    i._ZN6Thread9terminateEv                 0x08002770   Section        0  thread.o(i._ZN6Thread9terminateEv)
    i._ZN6ThreadC2EPKcPyj12osPriority_t      0x08002788   Section        0  thread.o(i._ZN6ThreadC2EPKcPyj12osPriority_t)
    i._ZN7MDBUart11getInstanceEv             0x080027b8   Section        0  mdbuart.o(i._ZN7MDBUart11getInstanceEv)
    i._ZN7MDBUart17onMessageReceiverEPvj     0x080027e4   Section        0  mdbuart.o(i._ZN7MDBUart17onMessageReceiverEPvj)
    i._ZN7MDBUart5writeEPKhj                 0x0800280e   Section        0  mdbuart.o(i._ZN7MDBUart5writeEPKhj)
    i._ZN7MDBUartC1Ev                        0x0800282c   Section        0  mdbuart.o(i._ZN7MDBUartC1Ev)
    i.__cxa_guard_acquire                    0x08002894   Section        0  cxa_guard_acquire.o(i.__cxa_guard_acquire)
    i.__cxa_pure_virtual                     0x080028a4   Section        0  pure_virt.o(i.__cxa_pure_virtual)
    i.main                                   0x080028ac   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x080028e8   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x08002908   Section        0  rtx_config.o(i.osRtxIdleThread)
    .constdata                               0x0800290c   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x0800290c   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x08002930   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x08002954   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x08002970   Section        1  irq_cm3.o(.constdata)
    .constdata__ZTV10BaseFormat              0x08002974   Section       12  pcuart.o(.constdata__ZTV10BaseFormat)
    .constdata__ZTV10BaseOutput              0x08002980   Section       12  pcuart.o(.constdata__ZTV10BaseOutput)
    .constdata__ZTV10MainThread              0x0800298c   Section       12  mainthread.o(.constdata__ZTV10MainThread)
    .constdata__ZTV14ScanQRCodeUart          0x08002998   Section       24  scanqrcodeuart.o(.constdata__ZTV14ScanQRCodeUart)
    .constdata__ZTV6PCUart                   0x080029b0   Section       24  pcuart.o(.constdata__ZTV6PCUart)
    .constdata__ZTV6Thread                   0x080029c8   Section       12  thread.o(.constdata__ZTV6Thread)
    .constdata__ZTV7MDBUart                  0x080029d4   Section       24  mdbuart.o(.constdata__ZTV7MDBUart)
    .rodata                                  0x080029ec   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x080029ec   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08002a54   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08002a54   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200010c4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200010c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001150   Section      512  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001150   Data         256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001250   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x20001350   Section       20  system_stm32f10x.o(.data)
    .data                                    0x20001364   Section        4  pcuart.o(.data)
    USART2_IRQHandler::lastIndex             0x20001364   Data           4  pcuart.o(.data)
    .data                                    0x20001368   Section        4  mdbuart.o(.data)
    USART1_IRQHandler::lastIndex             0x20001368   Data           4  mdbuart.o(.data)
    .data                                    0x2000136c   Section        4  scanqrcodeuart.o(.data)
    USART3_IRQHandler::lastIndex             0x2000136c   Data           4  scanqrcodeuart.o(.data)
    .data                                    0x20001370   Section        5  rtx_lib.o(.data)
    [local to rtx_lib_c]::os_kernel_is_active()::os_kernel_active 0x20001374   Data           1  rtx_lib.o(.data)
    .data__ZZN10MainThread11getInstanceEvE4task 0x2000141c   Section        4  main.o(.data__ZZN10MainThread11getInstanceEvE4task)
    MainThread::getInstance()::task          0x2000141c   Number         0  main.o(.data__ZZN10MainThread11getInstanceEvE4task)
    .data__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE 0x20001420   Section        4  scanqrcodeuart.o(.data__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE)
    ScanQRCodeUart::getInstance()::INSTANCE  0x20001420   Number         0  scanqrcodeuart.o(.data__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE)
    .data__ZZN6PCUart11getInstanceEvE4uart   0x20001424   Section        4  pcuart.o(.data__ZZN6PCUart11getInstanceEvE4uart)
    PCUart::getInstance()::uart              0x20001424   Number         0  pcuart.o(.data__ZZN6PCUart11getInstanceEvE4uart)
    .data__ZZN7MDBUart11getInstanceEvE4uart  0x20001428   Section        4  mdbuart.o(.data__ZZN7MDBUart11getInstanceEvE4uart)
    MDBUart::getInstance()::uart             0x20001428   Number         0  mdbuart.o(.data__ZZN7MDBUart11getInstanceEvE4uart)
    .bss                                     0x20001430   Section      576  pcuart.o(.bss)
    PCReceiverBuffer                         0x20001430   Data         512  pcuart.o(.bss)
    PCReceiverBufferOnce                     0x20001630   Data          64  pcuart.o(.bss)
    .bss                                     0x20001670   Section      576  mdbuart.o(.bss)
    MDBReceiverBuffer                        0x20001670   Data         512  mdbuart.o(.bss)
    MDBReceiverBufferOnce                    0x20001870   Data          64  mdbuart.o(.bss)
    .bss                                     0x200018b0   Section      576  scanqrcodeuart.o(.bss)
    ScanQRCodeReceiver                       0x200018b0   Data         512  scanqrcodeuart.o(.bss)
    ScanQRCodeMessageOnce                    0x20001ab0   Data          64  scanqrcodeuart.o(.bss)
    .bss                                     0x20001af0   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x20001b50   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x20001b50   Data           1  os_systick.o(.bss.PendST)
    .bss__ZZN10MainThread11getInstanceEvE4task 0x20001b58   Section      880  main.o(.bss__ZZN10MainThread11getInstanceEvE4task)
    .bss__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE 0x20001ec8   Section      424  scanqrcodeuart.o(.bss__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE)
    .bss__ZZN6PCUart11getInstanceEvE4uart    0x20002070   Section      424  pcuart.o(.bss__ZZN6PCUart11getInstanceEvE4uart)
    .bss__ZZN7MDBUart11getInstanceEvE4uart   0x20002218   Section      424  mdbuart.o(.bss__ZZN7MDBUart11getInstanceEvE4uart)
    HEAP                                     0x200023c0   Section        0  startup_stm32f10x_hd.o(HEAP)
    STACK                                    0x200023c0   Section     1024  startup_stm32f10x_hd.o(STACK)
    Heap_Mem                                 0x200023c0   Data           0  startup_stm32f10x_hd.o(HEAP)
    Stack_Mem                                0x200023c0   Data        1024  startup_stm32f10x_hd.o(STACK)
    __initial_sp                             0x200027c0   Data           0  startup_stm32f10x_hd.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM::default_unexpected_handler()       - Undefined Weak Reference
    __ARM_exceptions_buffer_required          - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _mutex_acquire                            - Undefined Weak Reference
    _mutex_free                               - Undefined Weak Reference
    _mutex_release                            - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000130   Number         0  startup_stm32f10x_hd.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_hd.o(RESET)
    __Vectors_End                            0x08000130   Data           0  startup_stm32f10x_hd.o(RESET)
    __main                                   0x08000131   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000139   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000147   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x0800016d   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x0800016d   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x080001a9   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x080001c5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x080001c9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x080001cd   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x080001cd   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x080001cd   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x080001d3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x080001d3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x080001d7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001d7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001df   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001e1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001e1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001e5   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x080001ed   Thumb Code     8  startup_stm32f10x_hd.o(.text)
    NMI_Handler                              0x080001f5   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    HardFault_Handler                        0x080001f7   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    MemManage_Handler                        0x080001f9   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    BusFault_Handler                         0x080001fb   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    UsageFault_Handler                       0x080001fd   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    DebugMon_Handler                         0x08000201   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    ADC1_2_IRQHandler                        0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    ADC3_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    CAN1_RX1_IRQHandler                      0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    CAN1_SCE_IRQHandler                      0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel2_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel3_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel4_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel5_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel6_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel7_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel1_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel2_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel3_IRQHandler                 0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel4_5_IRQHandler               0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI0_IRQHandler                         0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI15_10_IRQHandler                     0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI1_IRQHandler                         0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI2_IRQHandler                         0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI3_IRQHandler                         0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI4_IRQHandler                         0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI9_5_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    FLASH_IRQHandler                         0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    FSMC_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C1_ER_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C1_EV_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C2_ER_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C2_EV_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    PVD_IRQHandler                           0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RCC_IRQHandler                           0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RTCAlarm_IRQHandler                      0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RTC_IRQHandler                           0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SDIO_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI1_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI2_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI3_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TAMPER_IRQHandler                        0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_BRK_IRQHandler                      0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_CC_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_UP_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM2_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM3_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM4_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM5_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM6_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM7_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_BRK_IRQHandler                      0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_CC_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_UP_IRQHandler                       0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    UART4_IRQHandler                         0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    UART5_IRQHandler                         0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USBWakeUp_IRQHandler                     0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    WWDG_IRQHandler                          0x08000207   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    __user_initial_stackheap                 0x08000209   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SVC_Handler                              0x08000229   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x08000295   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x080002a5   Thumb Code    16  irq_cm3.o(.text)
    __aeabi_memcpy                           0x080002bd   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080002bd   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000323   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memcpy4                          0x08000347   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000347   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000347   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800038f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr                           0x080003ab   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080003ab   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x080003af   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080003ef   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080003ef   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080003ef   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x080003f3   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0800043d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x0800043f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000441   Thumb Code     2  heapauxi.o(.text)
    __rt_SIGPVFN                             0x08000443   Thumb Code    14  defsig_pvfn_outer.o(.text)
    __sig_exit                               0x08000451   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGPVFN_inner                       0x0800045d   Thumb Code    14  defsig_pvfn_inner.o(.text)
    _sys_exit                                0x0800048d   Thumb Code     8  sys_exit.o(.text)
    __user_setup_stackheap                   0x08000499   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x080004e3   Thumb Code    18  exit.o(.text)
    __default_signal_display                 0x080004f5   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x08000527   Thumb Code    14  sys_wrch.o(.text)
    __user_libspace                          0x08000535   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000535   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000535   Thumb Code     0  libspace.o(.text)
    __I$use$semihosting                      0x0800053d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800053d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800053f   Thumb Code     0  indicate_semi.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x08000605   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08000611   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x0800063d   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08000645   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osKernelGetState                         0x08000741   Thumb Code    52  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x08000775   Thumb Code    44  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080007a1   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x080007c5   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x08000831   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x08000855   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x080008d1   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x080008f5   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08000919   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x0800093d   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxKernelPreInit                       0x08000961   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x08000963   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x080009e3   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08000a35   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08000a6b   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08000aa3   Thumb Code    72  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08000aeb   Thumb Code    84  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08000bff   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x08000c45   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08000cd5   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08000e65   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08000e9d   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08000f55   Thumb Code    22  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08000f6b   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08000f97   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08000fab   Thumb Code    40  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08000ffd   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08001011   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08001019   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x08001041   Thumb Code    88  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08001099   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x080010a9   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x080010e1   Thumb Code    36  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001105   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x08001175   Thumb Code    68  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x08001211   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x0800121d   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    osThreadTerminate                        0x08001241   Thumb Code    36  rtx_thread.o(.text.osThreadTerminate)
    SystemInit                               0x08001cc9   Thumb Code    78  system_stm32f10x.o(i.SystemInit)
    USART1_IRQHandler                        0x08001d29   Thumb Code    82  mdbuart.o(i.USART1_IRQHandler)
    USART2_IRQHandler                        0x08001d8d   Thumb Code    82  pcuart.o(i.USART2_IRQHandler)
    USART3_IRQHandler                        0x08001df1   Thumb Code    82  scanqrcodeuart.o(i.USART3_IRQHandler)
    _mutex_free(void**)                      0x08001e55   Thumb Code    12  rtx_lib.o(i._Z11_mutex_freePPv)
    _mutex_acquire(void**)                   0x08001e61   Thumb Code    22  rtx_lib.o(i._Z14_mutex_acquirePPv)
    _mutex_release(void**)                   0x08001e77   Thumb Code    18  rtx_lib.o(i._Z14_mutex_releasePPv)
    _mutex_initialize(void**)                0x08001e89   Thumb Code    34  rtx_lib.o(i._Z17_mutex_initializePPv)
    BaseFormat::BaseFormat__sub_object(const BaseFormat&) 0x08001ead   Thumb Code    14  mainthread.o(i._ZN10BaseFormatC2ERKS_)
    BaseOutput::BaseOutput__sub_object(const BaseOutput&) 0x08001ec1   Thumb Code    18  mainthread.o(i._ZN10BaseOutputC2ERKS_)
    MainThread::run()                        0x08001ed9   Thumb Code   414  mainthread.o(i._ZN10MainThread3runEv)
    MainThread::MainThread()                 0x08002099   Thumb Code    58  mainthread.o(i._ZN10MainThreadC1Ev)
    MainThread::MainThread__sub_object()     0x08002099   Thumb Code     0  mainthread.o(i._ZN10MainThreadC1Ev)
    BaseMessage::BaseMessage(void*, unsigned) 0x080020e1   Thumb Code     6  mainthread.o(i._ZN11BaseMessageC1EPvj)
    BaseMessage::BaseMessage__sub_object(void*, unsigned) 0x080020e1   Thumb Code     0  mainthread.o(i._ZN11BaseMessageC1EPvj)
    MessageQueue::recv(void*, unsigned)      0x080020e7   Thumb Code    22  mainthread.o(i._ZN12MessageQueue4recvEPvj)
    MessageQueue::MessageQueue(const char*, unsigned long long*, unsigned, unsigned) 0x080020fd   Thumb Code    68  messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj)
    MessageQueue::MessageQueue__sub_object(const char*, unsigned long long*, unsigned, unsigned) 0x080020fd   Thumb Code     0  messagequeue.o(i._ZN12MessageQueueC1EPKcPyjj)
    ScanQRCodeUart::getInstance()            0x08002141   Thumb Code    36  scanqrcodeuart.o(i._ZN14ScanQRCodeUart11getInstanceEv)
    ScanQRCodeUart::onMessageReceiver(void*, unsigned) 0x0800216d   Thumb Code    42  scanqrcodeuart.o(i._ZN14ScanQRCodeUart17onMessageReceiverEPvj)
    ScanQRCodeUart::write(const unsigned char*, unsigned) 0x08002197   Thumb Code    28  scanqrcodeuart.o(i._ZN14ScanQRCodeUart5writeEPKhj)
    ScanQRCodeUart::ScanQRCodeUart()         0x080021b5   Thumb Code    88  scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev)
    ScanQRCodeUart::ScanQRCodeUart__sub_object() 0x080021b5   Thumb Code     0  scanqrcodeuart.o(i._ZN14ScanQRCodeUartC1Ev)
    PCUart::getInstance()                    0x0800265d   Thumb Code    36  pcuart.o(i._ZN6PCUart11getInstanceEv)
    PCUart::onMessageReceiver(unsigned char*, unsigned) 0x08002689   Thumb Code    42  pcuart.o(i._ZN6PCUart17onMessageReceiverEPhj)
    PCUart::write(const unsigned char*, unsigned) 0x080026b3   Thumb Code    28  pcuart.o(i._ZN6PCUart5writeEPKhj)
    PCUart::PCUart()                         0x080026d1   Thumb Code    88  pcuart.o(i._ZN6PCUartC1Ev)
    PCUart::PCUart__sub_object()             0x080026d1   Thumb Code     0  pcuart.o(i._ZN6PCUartC1Ev)
    Thread::ThreadStartFuncation(void*)      0x08002739   Thumb Code    20  thread.o(i._ZN6Thread20ThreadStartFuncationEPv)
    Thread::start()                          0x0800274d   Thumb Code    30  thread.o(i._ZN6Thread5startEv)
    Thread::terminate()                      0x08002771   Thumb Code    24  thread.o(i._ZN6Thread9terminateEv)
    Thread::Thread__sub_object(const char*, unsigned long long*, unsigned, osPriority_t) 0x08002789   Thumb Code    42  thread.o(i._ZN6ThreadC2EPKcPyj12osPriority_t)
    MDBUart::getInstance()                   0x080027b9   Thumb Code    36  mdbuart.o(i._ZN7MDBUart11getInstanceEv)
    MDBUart::onMessageReceiver(void*, unsigned) 0x080027e5   Thumb Code    42  mdbuart.o(i._ZN7MDBUart17onMessageReceiverEPvj)
    MDBUart::write(const unsigned char*, unsigned) 0x0800280f   Thumb Code    28  mdbuart.o(i._ZN7MDBUart5writeEPKhj)
    MDBUart::MDBUart()                       0x0800282d   Thumb Code    88  mdbuart.o(i._ZN7MDBUartC1Ev)
    MDBUart::MDBUart__sub_object()           0x0800282d   Thumb Code     0  mdbuart.o(i._ZN7MDBUartC1Ev)
    __cxa_guard_acquire                      0x08002895   Thumb Code    16  cxa_guard_acquire.o(i.__cxa_guard_acquire)
    __cxa_pure_virtual                       0x080028a5   Thumb Code     6  pure_virt.o(i.__cxa_pure_virtual)
    main                                     0x080028ad   Thumb Code    52  main.o(i.main)
    osRtxErrorNotify                         0x080028e9   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x08002909   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    osRtxUserSVC                             0x0800296c   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x08002970   Data           1  irq_cm3.o(.constdata)
    vtable for BaseFormat                    0x08002974   Data          12  pcuart.o(.constdata__ZTV10BaseFormat)
    vtable for BaseOutput                    0x08002980   Data          12  pcuart.o(.constdata__ZTV10BaseOutput)
    vtable for MainThread                    0x0800298c   Data          12  mainthread.o(.constdata__ZTV10MainThread)
    vtable for ScanQRCodeUart                0x08002998   Data          24  scanqrcodeuart.o(.constdata__ZTV14ScanQRCodeUart)
    vtable for PCUart                        0x080029b0   Data          24  pcuart.o(.constdata__ZTV6PCUart)
    vtable for Thread                        0x080029c8   Data          12  thread.o(.constdata__ZTV6Thread)
    vtable for MDBUart                       0x080029d4   Data          24  mdbuart.o(.constdata__ZTV7MDBUart)
    osRtxConfig                              0x080029ec   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x08002a60   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002a80   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20001040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20001074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200010c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000114c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    SystemCoreClock                          0x20001350   Data           4  system_stm32f10x.o(.data)
    AHBPrescTable                            0x20001354   Data          16  system_stm32f10x.o(.data)
    irqRtxLibRef                             0x20001370   Data           4  rtx_lib.o(.data)
    osRtxInfo                                0x20001378   Data         164  rtx_kernel.o(.data.os)
    guard variable for MainThread::getInstance()::task 0x2000141c   Data           4  main.o(.data__ZZN10MainThread11getInstanceEvE4task)
    guard variable for ScanQRCodeUart::getInstance()::INSTANCE 0x20001420   Data           4  scanqrcodeuart.o(.data__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE)
    guard variable for PCUart::getInstance()::uart 0x20001424   Data           4  pcuart.o(.data__ZZN6PCUart11getInstanceEvE4uart)
    guard variable for MDBUart::getInstance()::uart 0x20001428   Data           4  mdbuart.o(.data__ZZN7MDBUart11getInstanceEvE4uart)
    __libspace_start                         0x20001af0   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20001b50   Data           0  libspace.o(.bss)
    MainThread::getInstance()::task          0x20001b58   Data         880  main.o(.bss__ZZN10MainThread11getInstanceEvE4task)
    ScanQRCodeUart::getInstance()::INSTANCE  0x20001ec8   Data         424  scanqrcodeuart.o(.bss__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE)
    PCUart::getInstance()::uart              0x20002070   Data         424  pcuart.o(.bss__ZZN6PCUart11getInstanceEvE4uart)
    MDBUart::getInstance()::uart             0x20002218   Data         424  mdbuart.o(.bss__ZZN7MDBUart11getInstanceEvE4uart)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000131

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00003eac, Max: 0x00080000, ABSOLUTE, COMPRESSED[0x00002ac4])

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00002a80, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x00000130   Data   RO           67    RESET               startup_stm32f10x_hd.o
    0x08000130   0x00000008   Code   RO         1783  * !!!main             c_w.l(__main.o)
    0x08000138   0x00000034   Code   RO         2207    !!!scatter          c_w.l(__scatter.o)
    0x0800016c   0x0000003a   Code   RO         2205    !!dczerorl          c_w.l(__dczerorl.o)
    0x080001a6   0x00000002   PAD
    0x080001a8   0x0000001c   Code   RO         2209    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001c4   0x00000002   Code   RO         2030    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080001c6   0x00000000   Code   RO         2086    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2088    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2091    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2093    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2095    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2098    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2100    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2102    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2104    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2106    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2108    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2110    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2112    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2114    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2116    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2118    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2122    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2124    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2126    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         2128    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x080001c6   0x00000002   Code   RO         2129    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x080001c8   0x00000002   Code   RO         2182    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080001ca   0x00000000   Code   RO         2188    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         2190    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         2193    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         2196    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         2198    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         2201    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080001ca   0x00000002   Code   RO         2202    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080001cc   0x00000000   Code   RO         1900    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080001cc   0x00000000   Code   RO         1919    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080001cc   0x00000006   Code   RO         1931    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080001d2   0x00000000   Code   RO         1921    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x080001d2   0x00000004   Code   RO         1922    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001d6   0x00000000   Code   RO         1924    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001d6   0x00000008   Code   RO         1925    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001de   0x00000002   Code   RO         2044    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001e0   0x00000000   Code   RO         2133    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001e0   0x00000004   Code   RO         2134    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001e4   0x00000006   Code   RO         2135    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001ea   0x00000002   PAD
    0x080001ec   0x0000003c   Code   RO           68    .text               startup_stm32f10x_hd.o
    0x08000228   0x00000094   Code   RO         1605    .text               RTX_CM3.lib(irq_cm3.o)
    0x080002bc   0x0000008a   Code   RO         1773    .text               c_w.l(rt_memcpy_v6.o)
    0x08000346   0x00000064   Code   RO         1775    .text               c_w.l(rt_memcpy_w.o)
    0x080003aa   0x00000044   Code   RO         1777    .text               c_w.l(rt_memclr.o)
    0x080003ee   0x0000004e   Code   RO         1779    .text               c_w.l(rt_memclr_w.o)
    0x0800043c   0x00000006   Code   RO         1781    .text               c_w.l(heapauxi.o)
    0x08000442   0x0000000e   Code   RO         1901    .text               c_w.l(defsig_pvfn_outer.o)
    0x08000450   0x0000000a   Code   RO         1935    .text               c_w.l(defsig_exit.o)
    0x0800045a   0x00000002   PAD
    0x0800045c   0x00000030   Code   RO         1937    .text               c_w.l(defsig_pvfn_inner.o)
    0x0800048c   0x0000000c   Code   RO         1952    .text               c_w.l(sys_exit.o)
    0x08000498   0x0000004a   Code   RO         1954    .text               c_w.l(sys_stackheap_outer.o)
    0x080004e2   0x00000012   Code   RO         2017    .text               c_w.l(exit.o)
    0x080004f4   0x00000032   Code   RO         2023    .text               c_w.l(defsig_general.o)
    0x08000526   0x0000000e   Code   RO         2034    .text               c_w.l(sys_wrch.o)
    0x08000534   0x00000008   Code   RO         2036    .text               c_w.l(libspace.o)
    0x0800053c   0x00000002   Code   RO         2039    .text               c_w.l(use_no_semi.o)
    0x0800053e   0x00000000   Code   RO         2043    .text               c_w.l(indicate_semi.o)
    0x0800053e   0x00000046   Code   RO         1586    .text.MessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000584   0x00000064   Code   RO         1580    .text.MessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x080005e8   0x0000001c   Code   RO         1578    .text.MessageQueueRemove  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000604   0x0000000c   Code   RO         1748    .text.OS_Tick_AcknowledgeIRQ  RTX_CM3.lib(os_systick.o)
    0x08000610   0x0000002c   Code   RO         1744    .text.OS_Tick_Enable  RTX_CM3.lib(os_systick.o)
    0x0800063c   0x00000006   Code   RO         1750    .text.OS_Tick_GetIRQn  RTX_CM3.lib(os_systick.o)
    0x08000642   0x00000002   PAD
    0x08000644   0x00000040   Code   RO         1742    .text.OS_Tick_Setup  RTX_CM3.lib(os_systick.o)
    0x08000684   0x0000006a   Code   RO         1435    .text.ThreadFlagsCheck  RTX_CM3.lib(rtx_thread.o)
    0x080006ee   0x00000002   PAD
    0x080006f0   0x00000050   Code   RO         1626    .text.TimerInsert   RTX_CM3.lib(rtx_timer.o)
    0x08000740   0x00000034   Code   RO         1296    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x08000774   0x0000002c   Code   RO         1290    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x080007a0   0x00000024   Code   RO         1300    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x080007c4   0x0000006c   Code   RO         1552    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000830   0x00000024   Code   RO         1546    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000854   0x0000007c   Code   RO         1550    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x080008d0   0x00000024   Code   RO         1515    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x080008f4   0x00000024   Code   RO         1521    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08000918   0x00000024   Code   RO         1511    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x0800093c   0x00000024   Code   RO         1517    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08000960   0x00000002   Code   RO         1288    .text.osRtxKernelPreInit  RTX_CM3.lib(rtx_kernel.o)
    0x08000962   0x00000080   Code   RO         1655    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x080009e2   0x00000052   Code   RO         1657    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x08000a34   0x00000036   Code   RO         1653    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x08000a6a   0x00000038   Code   RO         1672    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x08000aa2   0x00000048   Code   RO         1674    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x08000aea   0x00000054   Code   RO         1670    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x08000b3e   0x000000c0   Code   RO         1576    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000bfe   0x00000044   Code   RO         1509    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08000c42   0x00000002   PAD
    0x08000c44   0x00000090   Code   RO         1727    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x08000cd4   0x00000074   Code   RO         1729    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x08000d48   0x00000038   Code   RO         1375    .text.osRtxThreadBlock  RTX_CM3.lib(rtx_thread.o)
    0x08000d80   0x0000008c   Code   RO         1383    .text.osRtxThreadDelayInsert  RTX_CM3.lib(rtx_thread.o)
    0x08000e0c   0x00000058   Code   RO         1379    .text.osRtxThreadDelayRemove  RTX_CM3.lib(rtx_thread.o)
    0x08000e64   0x00000038   Code   RO         1365    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x08000e9c   0x00000060   Code   RO         1373    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x08000efc   0x00000058   Code   RO         1459    .text.osRtxThreadFree  RTX_CM3.lib(rtx_thread.o)
    0x08000f54   0x00000016   Code   RO         1357    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x08000f6a   0x0000002c   Code   RO         1355    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x08000f96   0x00000014   Code   RO         1361    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x08000faa   0x00000028   Code   RO         1359    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x08000fd2   0x0000002a   Code   RO         1433    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x08000ffc   0x00000014   Code   RO         1363    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x08001010   0x00000006   Code   RO         1367    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x08001016   0x00000002   PAD
    0x08001018   0x00000028   Code   RO         1371    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x08001040   0x00000058   Code   RO         1385    .text.osRtxThreadStartup  RTX_CM3.lib(rtx_thread.o)
    0x08001098   0x00000010   Code   RO         1369    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x080010a8   0x00000038   Code   RO         1381    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x080010e0   0x00000024   Code   RO         1377    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x08001104   0x00000070   Code   RO         1725    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x08001174   0x00000044   Code   RO         1610    .text.osRtxTimerThread  RTX_CM3.lib(rtx_timer.o)
    0x080011b8   0x00000058   Code   RO         1612    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x08001210   0x0000000c   Code   RO         1417    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x0800121c   0x00000024   Code   RO         1389    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x08001240   0x00000024   Code   RO         1419    .text.osThreadTerminate  RTX_CM3.lib(rtx_thread.o)
    0x08001264   0x0000000c   Code   RO         1298    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x08001270   0x00000178   Code   RO         1328    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x080013e8   0x0000008c   Code   RO         1330    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x08001474   0x000000e8   Code   RO         1588    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x0800155c   0x00000134   Code   RO         1574    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001690   0x000000c0   Code   RO         1584    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001750   0x00000094   Code   RO         1527    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x080017e4   0x000000c4   Code   RO         1533    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x080018a8   0x0000006c   Code   RO         1523    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x08001914   0x000000b4   Code   RO         1529    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x080019c8   0x00000068   Code   RO         1463    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08001a30   0x000001dc   Code   RO         1387    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x08001c0c   0x000000bc   Code   RO         1465    .text.svcRtxThreadTerminate  RTX_CM3.lib(rtx_thread.o)
    0x08001cc8   0x00000060   Code   RO           18    i.SystemInit        system_stm32f10x.o
    0x08001d28   0x00000064   Code   RO          354    i.USART1_IRQHandler  mdbuart.o
    0x08001d8c   0x00000064   Code   RO          222    i.USART2_IRQHandler  pcuart.o
    0x08001df0   0x00000064   Code   RO          429    i.USART3_IRQHandler  scanqrcodeuart.o
    0x08001e54   0x0000000c   Code   RO         1144    i._Z11_mutex_freePPv  rtx_lib.o
    0x08001e60   0x00000016   Code   RO         1145    i._Z14_mutex_acquirePPv  rtx_lib.o
    0x08001e76   0x00000012   Code   RO         1146    i._Z14_mutex_releasePPv  rtx_lib.o
    0x08001e88   0x00000022   Code   RO         1147    i._Z17_mutex_initializePPv  rtx_lib.o
    0x08001eaa   0x00000002   PAD
    0x08001eac   0x00000014   Code   RO          746    i._ZN10BaseFormatC2ERKS_  mainthread.o
    0x08001ec0   0x00000018   Code   RO          731    i._ZN10BaseOutputC2ERKS_  mainthread.o
    0x08001ed8   0x000001c0   Code   RO          713    i._ZN10MainThread3runEv  mainthread.o
    0x08002098   0x00000048   Code   RO          714    i._ZN10MainThreadC1Ev  mainthread.o
    0x080020e0   0x00000006   Code   RO          734    i._ZN11BaseMessageC1EPvj  mainthread.o
    0x080020e6   0x00000016   Code   RO          740    i._ZN12MessageQueue4recvEPvj  mainthread.o
    0x080020fc   0x00000044   Code   RO          814    i._ZN12MessageQueueC1EPKcPyjj  messagequeue.o
    0x08002140   0x0000002c   Code   RO          483    i._ZN14ScanQRCodeUart11getInstanceEv  scanqrcodeuart.o
    0x0800216c   0x0000002a   Code   RO          430    i._ZN14ScanQRCodeUart17onMessageReceiverEPvj  scanqrcodeuart.o
    0x08002196   0x0000001c   Code   RO          431    i._ZN14ScanQRCodeUart5writeEPKhj  scanqrcodeuart.o
    0x080021b2   0x00000002   PAD
    0x080021b4   0x0000006c   Code   RO          432    i._ZN14ScanQRCodeUartC1Ev  scanqrcodeuart.o
    0x08002220   0x00000020   Code   RO         1151    i._ZN30_INTERNAL_9_rtx_lib_c_7c080eb619os_kernel_is_activeEv  rtx_lib.o
    0x08002240   0x00000050   Code   RO          223    i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10BufferOverEjj  pcuart.o
    0x08002290   0x000000a8   Code   RO          224    i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb10InitDriverEv  pcuart.o
    0x08002338   0x0000001c   Code   RO          225    i._ZN32_INTERNAL_10_PCUart_cpp_36a84ccb9WriteByteEh  pcuart.o
    0x08002354   0x00000050   Code   RO          355    i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610BufferOverEjj  mdbuart.o
    0x080023a4   0x000000a4   Code   RO          356    i._ZN33_INTERNAL_11_MDBUart_cpp_4712e86610InitDriverEv  mdbuart.o
    0x08002448   0x0000001c   Code   RO          357    i._ZN33_INTERNAL_11_MDBUart_cpp_4712e8669WriteByteEh  mdbuart.o
    0x08002464   0x00000050   Code   RO          433    i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610BufferOverEjj  scanqrcodeuart.o
    0x080024b4   0x000000a4   Code   RO          434    i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b610InitDriverEv  scanqrcodeuart.o
    0x08002558   0x0000001c   Code   RO          435    i._ZN40_INTERNAL_18_ScanQRCodeUart_cpp_8df813b69WriteByteEh  scanqrcodeuart.o
    0x08002574   0x00000008   Code   RO           19    i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6711SetSysClockEv  system_stm32f10x.o
    0x0800257c   0x000000e0   Code   RO           20    i._ZN40_INTERNAL_18_system_stm32f10x_c_5d646a6715SetSysClockTo72Ev  system_stm32f10x.o
    0x0800265c   0x0000002c   Code   RO          276    i._ZN6PCUart11getInstanceEv  pcuart.o
    0x08002688   0x0000002a   Code   RO          226    i._ZN6PCUart17onMessageReceiverEPhj  pcuart.o
    0x080026b2   0x0000001c   Code   RO          227    i._ZN6PCUart5writeEPKhj  pcuart.o
    0x080026ce   0x00000002   PAD
    0x080026d0   0x00000068   Code   RO          228    i._ZN6PCUartC1Ev    pcuart.o
    0x08002738   0x00000014   Code   RO          841    i._ZN6Thread20ThreadStartFuncationEPv  thread.o
    0x0800274c   0x00000024   Code   RO          842    i._ZN6Thread5startEv  thread.o
    0x08002770   0x00000018   Code   RO          843    i._ZN6Thread9terminateEv  thread.o
    0x08002788   0x00000030   Code   RO          844    i._ZN6ThreadC2EPKcPyj12osPriority_t  thread.o
    0x080027b8   0x0000002c   Code   RO          408    i._ZN7MDBUart11getInstanceEv  mdbuart.o
    0x080027e4   0x0000002a   Code   RO          358    i._ZN7MDBUart17onMessageReceiverEPvj  mdbuart.o
    0x0800280e   0x0000001c   Code   RO          359    i._ZN7MDBUart5writeEPKhj  mdbuart.o
    0x0800282a   0x00000002   PAD
    0x0800282c   0x00000068   Code   RO          360    i._ZN7MDBUartC1Ev   mdbuart.o
    0x08002894   0x00000010   Code   RO         1788    i.__cxa_guard_acquire  cpprt_w.l(cxa_guard_acquire.o)
    0x080028a4   0x00000006   Code   RO         1785    i.__cxa_pure_virtual  cpprt_w.l(pure_virt.o)
    0x080028aa   0x00000002   PAD
    0x080028ac   0x0000003c   Code   RO           72    i.main              main.o
    0x080028e8   0x00000020   Code   RO         1254    i.osRtxErrorNotify  rtx_config.o
    0x08002908   0x00000004   Code   RO         1255    i.osRtxIdleThread   rtx_config.o
    0x0800290c   0x00000064   Data   RO         1166    .constdata          rtx_lib.o
    0x08002970   0x00000001   Data   RO         1604    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x08002971   0x00000003   PAD
    0x08002974   0x0000000c   Data   RO          283    .constdata__ZTV10BaseFormat  pcuart.o
    0x08002980   0x0000000c   Data   RO          285    .constdata__ZTV10BaseOutput  pcuart.o
    0x0800298c   0x0000000c   Data   RO          730    .constdata__ZTV10MainThread  mainthread.o
    0x08002998   0x00000018   Data   RO          482    .constdata__ZTV14ScanQRCodeUart  scanqrcodeuart.o
    0x080029b0   0x00000018   Data   RO          275    .constdata__ZTV6PCUart  pcuart.o
    0x080029c8   0x0000000c   Data   RO          870    .constdata__ZTV6Thread  thread.o
    0x080029d4   0x00000018   Data   RO          407    .constdata__ZTV7MDBUart  mdbuart.o
    0x080029ec   0x00000068   Data   RO         1168    .rodata             rtx_lib.o
    0x08002a54   0x0000000b   Data   RO         1342    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x08002a5f   0x00000001   PAD
    0x08002a60   0x00000020   Data   RO         2203    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x000027c0, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x00000044])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001040   Data   RW         1160    .bss.os             rtx_lib.o
    0x20001040   0x00000034   Data   RW         1162    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001074   0x00000050   Data   RW         1163    .bss.os.msgqueue.mem  rtx_lib.o
    0x200010c4   0x00000088   Data   RW         1164    .bss.os.thread.cb   rtx_lib.o
    0x2000114c   0x00000004   PAD
    0x20001150   0x00000200   Data   RW         1165    .bss.os.thread.stack  rtx_lib.o
    0x20001350   0x00000014   Data   RW           25    .data               system_stm32f10x.o
    0x20001364   0x00000004   Data   RW          239    .data               pcuart.o
    0x20001368   0x00000004   Data   RW          371    .data               mdbuart.o
    0x2000136c   0x00000004   Data   RW          446    .data               scanqrcodeuart.o
    0x20001370   0x00000005   Data   RW         1167    .data               rtx_lib.o
    0x20001375   0x00000003   PAD
    0x20001378   0x000000a4   Data   RW         1343    .data.os            RTX_CM3.lib(rtx_kernel.o)
    0x2000141c   0x00000004   Data   RW           82    .data__ZZN10MainThread11getInstanceEvE4task  main.o
    0x20001420   0x00000004   Data   RW          490    .data__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE  scanqrcodeuart.o
    0x20001424   0x00000004   Data   RW          287    .data__ZZN6PCUart11getInstanceEvE4uart  pcuart.o
    0x20001428   0x00000004   Data   RW          415    .data__ZZN7MDBUart11getInstanceEvE4uart  mdbuart.o
    0x2000142c   0x00000004   PAD
    0x20001430   0x00000240   Zero   RW          238    .bss                pcuart.o
    0x20001670   0x00000240   Zero   RW          370    .bss                mdbuart.o
    0x200018b0   0x00000240   Zero   RW          445    .bss                scanqrcodeuart.o
    0x20001af0   0x00000060   Zero   RW         2037    .bss                c_w.l(libspace.o)
    0x20001b50   0x00000001   Zero   RW         1760    .bss.PendST         RTX_CM3.lib(os_systick.o)
    0x20001b51   0x00000007   PAD
    0x20001b58   0x00000370   Zero   RW           83    .bss__ZZN10MainThread11getInstanceEvE4task  main.o
    0x20001ec8   0x000001a8   Zero   RW          491    .bss__ZZN14ScanQRCodeUart11getInstanceEvE8INSTANCE  scanqrcodeuart.o
    0x20002070   0x000001a8   Zero   RW          288    .bss__ZZN6PCUart11getInstanceEvE4uart  pcuart.o
    0x20002218   0x000001a8   Zero   RW          416    .bss__ZZN7MDBUart11getInstanceEvE4uart  mdbuart.o
    0x200023c0   0x00000000   Zero   RW           66    HEAP                startup_stm32f10x_hd.o
    0x200023c0   0x00000400   Zero   RW           65    STACK               startup_stm32f10x_hd.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0       3112   core_cm3.o
        60          8          0          4        880       7627   main.o
       592         60         12          0          0      14404   mainthread.o
       590         76         24          8       1000       7604   mdbuart.o
        68          0          0          0          0       1000   messagequeue.o
       594         78         48          8       1000     234583   pcuart.o
        36          6          0          0          0        937   rtx_config.o
       118          4        204       4945          0      16127   rtx_lib.o
       594         82         24          8       1000       7860   scanqrcodeuart.o
        60         22        304          0       1024        768   startup_stm32f10x_hd.o
       328         28          0         20          0       3237   system_stm32f10x.o
       128         12         12          0          0       2912   thread.o

    ----------------------------------------------------------------------
      3176        376        660       5000       4908     300171   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0          7          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       148         10          1          0          0        492   irq_cm3.o
       126         32          0          0          1       3634   os_systick.o
       662         48         11        164          0      18879   rtx_kernel.o
       264          0          0          0          0       2733   rtx_memory.o
       212          0          0          0          0      17095   rtx_mempool.o
      1390         28          0          0          0      19369   rtx_msgqueue.o
       844         32          0          0          0      10275   rtx_mutex.o
       372         24          0          0          0       5693   rtx_system.o
      1912        100          0          0          0      34213   rtx_thread.o
       236         20          0          0          0      11154   rtx_timer.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        48         34          0          0          0         76   defsig_pvfn_inner.o
        14          0          0          0          0         80   defsig_pvfn_outer.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o
        16          0          0          0          0         68   cxa_guard_acquire.o
         6          0          0          0          0         68   pure_virt.o

    ----------------------------------------------------------------------
      7028        344         16        164        104     124941   Library Totals
        16          0          4          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6166        294         12        164          1     123537   RTX_CM3.lib
       824         50          0          0         96       1268   c_w.l
        22          0          0          0          0        136   cpprt_w.l

    ----------------------------------------------------------------------
      7028        344         16        164        104     124941   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     10204        720        676       5164       5012     421860   Grand Totals
     10204        720        676         68       5012     421860   ELF Image Totals (compressed)
     10204        720        676         68          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                10880 (  10.63kB)
    Total RW  Size (RW Data + ZI Data)             10176 (   9.94kB)
    Total ROM Size (Code + RO Data + RW Data)      10948 (  10.69kB)

==============================================================================

